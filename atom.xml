<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chenSJ519&#39; Blog</title>
  
  <subtitle>Man can only rely on himself</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-05T11:03:12.114Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>chenSJ519</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>推荐下idea好用的插件</title>
    <link href="http://yoursite.com/2018/04/04/%E6%8E%A8%E8%8D%90%E4%B8%8Bidea%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/04/04/推荐下idea好用的插件/</id>
    <published>2018-04-04T00:55:29.000Z</published>
    <updated>2018-04-05T11:03:12.114Z</updated>
    
    <content type="html"><![CDATA[<p> 这是我工作一年多，发掘的idea不错的插件，向大家推荐一下<br> 注：作者的idea版本是 IntelliJ IDEA 2017.3.4 Window10环境<br><a id="more"></a></p><hr><h2 id="Mybatis相关插件"><a href="#Mybatis相关插件" class="headerlink" title="Mybatis相关插件"></a>Mybatis相关插件</h2><h3 id="MyBatis-plugin"><a href="#MyBatis-plugin" class="headerlink" title="MyBatis plugin"></a>MyBatis plugin</h3><p><a href="https://www.codesmagic.com/mybatisplugin/userguide" target="_blank" rel="noopener">https://www.codesmagic.com/mybatisplugin/userguide</a> 使用他，写mybatis更加高效，不过是收费的,网上有破解版，可以google</p><h3 id="Free-MyBatis-plugin"><a href="#Free-MyBatis-plugin" class="headerlink" title="Free MyBatis plugin"></a>Free MyBatis plugin</h3><p>和MyBatis plugin功能相似，但功能不及MyBatis plugin,优点是免费</p><h3 id="MyBatis-Log-Plugin"><a href="#MyBatis-Log-Plugin" class="headerlink" title="MyBatis Log Plugin"></a>MyBatis Log Plugin</h3><p>Mybatis现在是java中操作数据库的首选，在开发的时候，我们都会把Mybatis的脚本直接输出在console中，但是默认的情况下，输出的脚本不是一个可以直接执行的。<br><img src="http://static.zybuluo.com/chenSJ/lm0r8w89cybv0v7mnjd79l2w/1522683352230898aa621f8.jpg" alt="1522683352230898aa621f8.jpg-23kB"><br>如果我们想直接执行，还需要在手动转化一下。<br>MyBatis Log Plugin 这款插件是直接将Mybatis执行的sql脚本显示出来，无需处理，可以直接复制出来执行。<br><img src="http://static.zybuluo.com/chenSJ/fuj2y2tsp19p3928hnrsoy0l/15226833524049531b2686c.jpg" alt="15226833524049531b2686c.jpg-50.7kB"></p><h3 id="Jrebel"><a href="#Jrebel" class="headerlink" title="Jrebel"></a>Jrebel</h3><p>Mybatis修改sql文件后，只能重启才能生效，这是一件痛苦的事，有了他不用重启，不光是针对Mybatis,其他很多我们需要重启的事，使用这个插件后，在普通Web项目中，你只要Ctrl+F10就可以实现热部署了，<br><img src="http://static.zybuluo.com/chenSJ/ntq5wd401j490v8trwx0vp9i/2018-04-05_170243.jpg" alt="2018-04-05_170243.jpg-188.8kB"><br>但是在在spring boot中，Ctrl+F10就不好使了，要用Build Project,我是把这个按钮设为Ctrl+S方便记忆，这也是收费的，不过网上也有破解版本。<br><img src="http://static.zybuluo.com/chenSJ/fv1u3dwsiaynbn0u11s66o8c/2018-04-05_170144.jpg" alt="2018-04-05_170144.jpg-73.9kB"></p><h2 id="restfultookit"><a href="#restfultookit" class="headerlink" title="restfultookit"></a>restfultookit</h2><p>Spring MVC网页开发的时候，我们都是通过requestmapping的方式来定义页面的URL地址的，为了找到这个地址我们一般都是cmd+shift+F的方式进行查找，大家都知道，我们URL的命名一个是类requestmapping+方法requestmapping，查找的时候还是有那么一点不方便的，restfultookit就能很方便的帮忙进行查找。<br>当然restfultookit还为我们提供的其他的功能。能根据我们的controller帮我们生成默认的测试数据，还能直接调用测试，这个可以是解决了我们每次postman调试数据时，自己傻傻的组装数据的的操作，这个更加清晰，比在console找数据包要方便多了。不过好像在我这个idea版本有点问题<br><img src="http://static.zybuluo.com/chenSJ/oppd5s50557h6qpntc8xdx0t/2018-04-05_183840.jpg" alt="2018-04-05_183840.jpg-70.7kB"><br>不过最新的Idea也集成了类似的功能<br><img src="http://static.zybuluo.com/chenSJ/0rcq4fvezf9o0wxx4ck2zhdb/2018-04-05_183752.jpg" alt="2018-04-05_183752.jpg-162.6kB"></p><h2 id="ECTranslation"><a href="#ECTranslation" class="headerlink" title="ECTranslation"></a>ECTranslation</h2><p>好用的翻译插件，我是把快捷键设置为Ctrl+鼠标右键，挺方便。<br><img src="http://static.zybuluo.com/chenSJ/mxgw8vpfu0ijil0ccicjljns/2018-04-05_174841.jpg" alt="2018-04-05_174841.jpg-76.6kB"></p><h2 id="CamelCase"><a href="#CamelCase" class="headerlink" title="CamelCase"></a>CamelCase</h2><p>驼峰式命名和下划线命名交替变化,快捷键 SHIFT + ALT + U</p><h2 id="GsonFormat"><a href="#GsonFormat" class="headerlink" title="GsonFormat"></a>GsonFormat</h2><p>把 JSON 字符串直接实例化成类，用法：新建一个类，然后Alt+Insert<br><img src="http://static.zybuluo.com/chenSJ/j3815u6if9bkwl3wrxnjw446/2018-04-05_175916.jpg" alt="2018-04-05_175916.jpg-53.7kB"></p><h2 id="Key-promoter"><a href="#Key-promoter" class="headerlink" title="Key promoter"></a>Key promoter</h2><p>很多开发都是从Eclipse转到Idea的。用习惯了Eclipse的快捷键之后在使用IDEA真的非常不习惯。Key promoter这款插件适合新手使用。当你点击鼠标一个功能的时候，可以提示你这个功能快捷键是什么。</p><h2 id="grep-console"><a href="#grep-console" class="headerlink" title="grep console"></a>grep console</h2><p>java 开发的过程中，日志都会输出到console，输出的内容是非常多的，所以需要有一个工具可以方便的查找日志，或者可以非常明显显示我们关注的内容，grep console就是这样的一个工具。<br><img src="http://static.zybuluo.com/chenSJ/xgxpf6k8xu343f79sk4rzftt/2018-04-05_180357.jpg" alt="2018-04-05_180357.jpg-247.9kB"><br>还可以筛选<br><img src="http://static.zybuluo.com/chenSJ/94r75e28msv2om4nl3yn1g3d/2018-04-05_180724.jpg" alt="2018-04-05_180724.jpg-222.2kB"><br>点击Reload<br><img src="http://static.zybuluo.com/chenSJ/8krimvryuyxk6mtqpcjimt0a/2018-04-05_180438.jpg" alt="2018-04-05_180438.jpg-111.1kB"></p><h2 id="Alibaba-Java-Coding-Guidelines"><a href="#Alibaba-Java-Coding-Guidelines" class="headerlink" title="Alibaba Java Coding Guidelines"></a>Alibaba Java Coding Guidelines</h2><p>检查代码规范的工具，阿里出品<br><img src="http://static.zybuluo.com/chenSJ/rh328xsj7sxavlfc95a65y8l/2018-04-05_181253.jpg" alt="2018-04-05_181253.jpg-137.8kB"></p><h2 id="FindBugs-IDEA"><a href="#FindBugs-IDEA" class="headerlink" title="FindBugs-IDEA"></a>FindBugs-IDEA</h2><p>检查代码的工具<br><img src="http://static.zybuluo.com/chenSJ/m4hgnxygtsdto6s9lmc0o80c/2018-04-05_185912.jpg" alt="2018-04-05_185912.jpg-111.2kB"></p><h2 id="stackoverflow"><a href="#stackoverflow" class="headerlink" title="stackoverflow"></a>stackoverflow</h2><p>这个倒是有点意思</p><p><img src="http://static.zybuluo.com/chenSJ/mt29hp1jt4r97lk2m4oblap5/2018-04-05_182202.jpg" alt="2018-04-05_182202.jpg-227.9kB"></p><h2 id="CodeGlance"><a href="#CodeGlance" class="headerlink" title="CodeGlance"></a>CodeGlance</h2><p>类似于sublime右侧的小地图<br><img src="http://static.zybuluo.com/chenSJ/7wq53hka47tco8s3c17sbl6m/2018-04-05_184136.jpg" alt="2018-04-05_184136.jpg-218.4kB"></p><h2 id="装逼神器"><a href="#装逼神器" class="headerlink" title="装逼神器"></a>装逼神器</h2><h3 id="AceJump"><a href="#AceJump" class="headerlink" title="AceJump"></a>AceJump</h3><p>AceJump其实是一款能够代替鼠标的软件，只要安装了这款插件，可以在代码中跳转到任意位置。按快捷键进入 AceJump 模式后（默认是 Ctrl+；，在我用的这个idea版本好像不能用了），再按任一个字符，插件就会在屏幕中这个字符的所有出现位置都打上标签，你只要再按一下标签的字符，就能把光标移到该位置上。换言之，你要移动光标时，眼睛一直看着目标位置就行了，根本不用管光标的当前位置。（这个东西听起来很装X，但我个人感觉用起来还不如用笔记本的触摸板爽）</p><h3 id="activate-power-mode"><a href="#activate-power-mode" class="headerlink" title="activate-power-mode"></a>activate-power-mode</h3><p>这个看图就知道有多装X了，哈哈。。<br><img src="http://static.zybuluo.com/chenSJ/8u6cgtn66t9bgzpeq29ljj3s/509c00031723cef8729b.gif" alt="509c00031723cef8729b.gif-343.3kB"><br>设置方法<br><img src="http://static.zybuluo.com/chenSJ/lez3of3lsedgtvumjff0xbx2/2018-04-05_182714.jpg" alt="2018-04-05_182714.jpg-109.1kB"></p><h3 id="Background-Image-Plus"><a href="#Background-Image-Plus" class="headerlink" title="Background Image Plus"></a>Background Image Plus</h3><p><img src="http://static.zybuluo.com/chenSJ/kym7nt8nxpgb0fcd4bft9f9b/509a0003696308aca30e.jpg" alt="509a0003696308aca30e.jpg-47.6kB"><br>用法：<br><img src="http://static.zybuluo.com/chenSJ/q3c27dcfdw8cqr15uyt2tj8z/2018-04-05_185536.jpg" alt="2018-04-05_185536.jpg-113.9kB"></p><h3 id="Sexy-Editor"><a href="#Sexy-Editor" class="headerlink" title="Sexy Editor"></a>Sexy Editor</h3><p>也是背景图的功能，看一搞安卓的哥们用过，感觉有点意思。<br><img src="http://static.zybuluo.com/chenSJ/fkc0ezalbodt3iicc6nb01vp/2096079-8dae7cd408db16ce.png" alt="2096079-8dae7cd408db16ce.png-92.6kB"><br><img src="http://static.zybuluo.com/chenSJ/czwtb0xeutwb71zeomfnyz2i/2018-04-05_185337.jpg" alt="2018-04-05_185337.jpg-76.7kB"><br>这也许就是面向对象编程吧</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 这是我工作一年多，发掘的idea不错的插件，向大家推荐一下&lt;br&gt; 注：作者的idea版本是 IntelliJ IDEA 2017.3.4 Window10环境&lt;br&gt;
    
    </summary>
    
      <category term="idea 插件" scheme="http://yoursite.com/categories/idea-%E6%8F%92%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>java爬虫从入门到初级</title>
    <link href="http://yoursite.com/2018/04/03/java%E7%88%AC%E8%99%AB%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%88%9D%E7%BA%A7/"/>
    <id>http://yoursite.com/2018/04/03/java爬虫从入门到初级/</id>
    <published>2018-04-03T00:55:29.000Z</published>
    <updated>2018-04-05T08:27:43.873Z</updated>
    
    <content type="html"><![CDATA[<p> java爬虫从入门到初级<br><a id="more"></a></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于这些天要进行一些交接任务，公司要求把所有相关爬虫的东西都总结成技术文档才算交接完成。所以干脆写篇java爬虫教程。我所学的一切都是网上自己找的相关文章，读Webmagic源代码而来，非常感谢网络上很多无私的人分享自己的代码，所以这篇教程我也分享一下，也许其中的方案并不是最好的，但至少能为后面的人少走点弯路。</p><p>首先我要说明一下，这个webmagic爬虫框架其实也是作者仿照python爬虫框架的而写的，如果你学完了这个java实现的爬虫框架，并且能读懂它的大部分源码，再学习python的pyspider及scrapy这类爬虫框架，是会非常快的，并且他们解决问题的思路其实也是可以从java的搬到python,或者从python搬到java上。</p><p>这篇文章不是为了手把手的教，只是描述学习的过程，记录一下学习的经验。和让后面学习的人少走一些弯路。所以过程略显跳跃。。。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><a href="http://webmagic.io/docs/zh/" target="_blank" rel="noopener">http://webmagic.io/docs/zh/</a> 。首先先把这篇Webmagic作者的文章弄懂就可以写一个简单的爬虫了。其中要注意的是作者介绍了一种注解的方式编写爬虫，这种方式虽然看起来简洁优雅，但这些注解并没有做到像非注解方式的灵活，而且注解的方式也增加了debug的难度，所以我并不推荐大家用这种方式写爬虫。</p><h2 id="提取表达式"><a href="#提取表达式" class="headerlink" title="提取表达式"></a>提取表达式</h2><p><img src="http://static.zybuluo.com/chenSJ/8sdd9795e1j5tzgw91a85z2b/2018-04-02_233144.jpg" alt="2018-04-02_233144.jpg-212.1kB"></p><p>  webmagic提取字段的方式有xpath与jsoup这两种。jsoup类似于jquery的选取方式，解析效率高，容易用肉眼写出提取表达式。但不推荐一开始就用这个，后期优化效率可以用这个。xpath的原理就是dom4j的xpath表达式，表达式一般要借用chrome插件，用了这个插件后，开发时会很快<br>  xpath helper，这个插件的用法读图中的英文介绍就能知道怎么用了，就不啰嗦了。<br>  <img src="http://static.zybuluo.com/chenSJ/0ivcudbebbnmakg431nm2zav/2018-04-02_234037.jpg" alt="2018-04-02_234037.jpg-266.3kB"><br>  如果想要提取文章标题的xpath表达式，使用xpath helper插件后，可以简化一下表达式（注意，表达式太过于长的话，也许是会报错的）<br><img src="http://static.zybuluo.com/chenSJ/ofmwtamnb9qk9ohwtlujiyoy/2018-04-02_234417.jpg" alt="2018-04-02_234417.jpg-379.6kB"><br>我们只取最后一部分，然后使开头为“//”代表非根路径，然后图中的标题也都选中了，说明这种简化表达式是ok的<br><img src="http://static.zybuluo.com/chenSJ/zsls4jxdze4sq44bcwo57rmv/2018-04-02_234809.jpg" alt="2018-04-02_234809.jpg-362.7kB"></p><p>  读者看完这些后，其实可以找个网站实战一下了简单的爬取了。</p><h2 id="Request对象"><a href="#Request对象" class="headerlink" title="Request对象"></a>Request对象</h2><p>这个对象看起来不怎么起眼，其实，能实现的功能有的时候非常强大，但官网中又没有对他进行详细的介绍，当时也是坑在这上面了。这里介绍他的常用方式<img src="http://static.zybuluo.com/chenSJ/bvxqo06ikfqq7s7w9np2o9kc/2018-04-03_114050.jpg" alt="2018-04-03_114050.jpg-154.3kB">。</p><h3 id="request-setPriority-0"><a href="#request-setPriority-0" class="headerlink" title="request.setPriority(0)"></a>request.setPriority(0)</h3><p>第一个方法’request.setPriority(0)’这个方法是设置这个url在当前url队列中的优先级的，在默认情况下，url的队列是遵循FIFO(先进先出）的方式，但有时，我们觉得这个url优等级比较高，比如在爬取天猫的时候先搜索得到商品列表url，再得到商品详情页的url，再提取信息，这个时候由于商品url列表在队列的最前方，商品详情的url在队列的后方，那么只有等到最后面，爬虫才会爬取商品详情。可能在数据量不多的时候不会有什么问题，但数据量多了话，要等很久才能爬到商品详情页，有的时候万一项目宕机了，那还没爬取到详情页就gg了，那之前的功夫也就白费了（当然这可以用文件或者redis实现断电续爬的功能），所以要设置优先级。数越大，优先级越高。当然一定要设置<code>spider.setScheduler(new PriorityScheduler());</code>这是url队列在内存上的一种设置方式，也可以用<code>spider.setScheduler(new RedisPriorityScheduler(&quot;localhost&quot;));</code>这种方式，这样url队列是在redis上了,在redis上的好处是能实现断点续爬，并且能实现多机器分布式。</p><h3 id="request-setBinaryContent-true"><a href="#request-setBinaryContent-true" class="headerlink" title="request.setBinaryContent(true)"></a>request.setBinaryContent(true)</h3><p>如果你想把图片的url放入url队列，那么可以使用这种方式。判断是否图片用<code>request.isBinaryContent();</code>方式。这个方法的好处是免去了webmagic把图片转成文本的不必要步骤。</p><h3 id="request-putExtra"><a href="#request-putExtra" class="headerlink" title="request.putExtra()"></a>request.putExtra()</h3><p>这个方法的主要用途是，如果你想在子url中得到父url的相关信息，那么在父url那么可以把相关的信息设置进去。然后用<code>page.getRequest().getExtra()</code>来提取当时在父url放置的相关信息。</p><h3 id="request-setMethod-HttpConstant-Method-POST"><a href="#request-setMethod-HttpConstant-Method-POST" class="headerlink" title="request.setMethod(HttpConstant.Method.POST);"></a>request.setMethod(HttpConstant.Method.POST);</h3><p>如果你想使用post请求那么可以使用这个方法，注意，如果请求是post的话，即使是相同的url，也不会进行url去重，<br><code>request.setRequestBody(HttpRequestBody.form(parmMap, &quot;utf-8&quot;));</code><br>post表单这样就可以设置进去了。</p><h3 id="request-addCookie"><a href="#request-addCookie" class="headerlink" title="request.addCookie()"></a>request.addCookie()</h3><p>如果请求需要特定的cookie的话，那么可以用这种方式。在Site对像使用这个方法，即为全局cookie</p><h2 id="网页渲染的网站如何爬取"><a href="#网页渲染的网站如何爬取" class="headerlink" title="网页渲染的网站如何爬取"></a>网页渲染的网站如何爬取</h2><p>这个有几种方式,如何这个网站只是简单的把json渲染，那么用page.getJson().jsonPath()就可以搞定了。<br>如果这个网站特意做了反爬虫，那么只能用无界浏览器来了，无界浏览器分为几种，</p><h3 id="htmlutil"><a href="#htmlutil" class="headerlink" title="htmlutil"></a>htmlutil</h3><p>一种是纯java实现的——htmlutil。这个的特点就是快，如果你想在java中执行javascript,那么可以用这个，但如果是渲染js那还是不要用这个方式了，因为它并不完全仿真浏览器。</p><h3 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h3><p>这个工具本意是用途自动化测试用的， <a href="https://www.seleniumhq.org/" target="_blank" rel="noopener">https://www.seleniumhq.org/</a> （可能要翻墙）它可以结合chrome,firefox,IE,phantomjs,不过也用于爬虫。不过用这个速度启动偏慢。</p><h3 id="phantomjs"><a href="#phantomjs" class="headerlink" title="phantomjs"></a>phantomjs</h3><p>这个可以说是爬虫中的大杀器了，因为它就是真的浏览器的内核实现的，webkit内核。模拟真实访问难以分辨，而且这个是没有界面的，所以爬的速度是超过有界浏览器，但慢于httpclient。这是 <a href="http://phantomjs.org/api/" target="_blank" rel="noopener">http://phantomjs.org/api/</a>  官网，遗憾的是由于chrome在最新的版本中也加上了无界的特性（headless），使phantomjs的作者感觉这个项目已经没有维护的必要了。在2017年4月的时候，phantomjs作者正式说明停止维护。 <a href="https://www.oschina.net/news/84158/vitaly-stepping-down-as-maintainer" target="_blank" rel="noopener">https://www.oschina.net/news/84158/vitaly-stepping-down-as-maintainer</a><br>虽然如此，但大量的老项目仍然还是使用这个无界浏览器，所以学会这个也是有用的。而chrome推出的这个新功能的浏览器，我在2017年12月份的时候到官网研究过，发现这个东西那个时候还没有完善起来。现在也不知道完善到什么程度了。</p><h4 id="Selenium操作phantomjs的方法"><a href="#Selenium操作phantomjs的方法" class="headerlink" title="Selenium操作phantomjs的方法"></a>Selenium操作phantomjs的方法</h4><p>一种是用Selenium来操作,由于phantomjs不维护了，最新的selenium已经不支持phantomjs了<br> <a href="http://phantomjs.org" target="_blank" rel="noopener">http://phantomjs.org</a>  下载phantomjs。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;selenium-java&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>这是入门级Demo:<br><a href="http://www.cnblogs.com/shirandedan/p/6802763.html" target="_blank" rel="noopener">http://www.cnblogs.com/shirandedan/p/6802763.html</a><br><a href="https://my.oschina.net/flashsword/blog/147334" target="_blank" rel="noopener">https://my.oschina.net/flashsword/blog/147334</a><br>好文章推荐：<a href="https://zhuanlan.zhihu.com/p/25507989" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25507989</a><br><a href="https://www.jianshu.com/p/9d408e21dc3a" target="_blank" rel="noopener">https://www.jianshu.com/p/9d408e21dc3a</a><br>截屏方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file=((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);</span><br></pre></td></tr></table></figure><p>这是我仿照例子写的驱动池。目地是为了解决phantomjs不支持多线程的问题。我其中注解的东西，可以根据实际情况使用他。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">package com.crawler.selenium;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by chenshengju on 2017/9/20 0020.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import com.crawler.industry.config.CrawlerConfig;</span><br><span class="line">import com.crawler.proxyutils.XdailiUtils;</span><br><span class="line">import org.openqa.selenium.WebDriver;</span><br><span class="line">import org.openqa.selenium.phantomjs.PhantomJSDriver;</span><br><span class="line">import org.openqa.selenium.phantomjs.PhantomJSDriverService;</span><br><span class="line">import org.openqa.selenium.remote.DesiredCapabilities;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import us.codecraft.webmagic.proxy.Proxy;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.util.concurrent.BlockingDeque;</span><br><span class="line">import java.util.concurrent.LinkedBlockingDeque;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line">import java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author taojw</span><br><span class="line"> */</span><br><span class="line">public class WebPhantomJsDriverPool implements WebDriverPool&#123;</span><br><span class="line">    private Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line">    private int CAPACITY = 5;</span><br><span class="line">    private AtomicInteger refCount = new AtomicInteger(0);</span><br><span class="line">    private static final String DRIVER_PHANTOMJS = &quot;phantomjs&quot;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * store webDrivers available</span><br><span class="line">     */</span><br><span class="line">    private BlockingDeque&lt;WebDriver&gt; innerQueue = new LinkedBlockingDeque&lt;WebDriver&gt;(</span><br><span class="line">            CAPACITY);</span><br><span class="line">    /**</span><br><span class="line">     * 默认驱动是在当前目录中</span><br><span class="line">     */</span><br><span class="line">    private static String PHANTOMJS_PATH;</span><br><span class="line">    private static DesiredCapabilities caps = DesiredCapabilities.phantomjs();</span><br><span class="line"></span><br><span class="line">    static &#123;</span><br><span class="line">//        String[] phantomArgs = new  String[] &#123;</span><br><span class="line">////                &quot;--webdriver-loglevel=INFO&quot;,</span><br><span class="line">//                &quot;--webdriver-loglevel=NONE&quot;,</span><br><span class="line">////                &quot;--webdriver-loglevel=DEBUG&quot;,</span><br><span class="line">//////                ,&quot;--load-images=no&quot;</span><br><span class="line">//                &quot;--disk-cache=true&quot;,</span><br><span class="line">////                &quot;--disk-cache=false&quot;,</span><br><span class="line">//                &quot;--disk-cache-path=cache&quot;</span><br><span class="line">////                &quot;--offline-storage-path=d:/hh&quot;</span><br><span class="line">//        &#125;;</span><br><span class="line">        String[] phantomArgs = PhantomjsConfig.phantomArgs;</span><br><span class="line">//        caps.setCapability(&quot;phantomjs.page.settings.loadImages&quot;,false);</span><br><span class="line">        //判断当前系统是windos还是linux</span><br><span class="line">        String os = System.getProperty(&quot;os.name&quot;);</span><br><span class="line">        if(os.toLowerCase().startsWith(&quot;win&quot;))&#123;</span><br><span class="line">            PHANTOMJS_PATH = new File(&quot;resources/phantomjs.exe&quot;).getAbsolutePath();</span><br><span class="line">        &#125;else</span><br><span class="line">        &#123;</span><br><span class="line">            PHANTOMJS_PATH = new File(&quot;resources/phantomjs&quot;).getAbsolutePath();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        caps.setJavascriptEnabled(true);</span><br><span class="line">        caps.setCapability(</span><br><span class="line">                PhantomJSDriverService.PHANTOMJS_EXECUTABLE_PATH_PROPERTY,</span><br><span class="line">                PHANTOMJS_PATH);</span><br><span class="line">        caps.setCapability(&quot;takesScreenshot&quot;, false);</span><br><span class="line">        caps.setCapability(</span><br><span class="line">                PhantomJSDriverService.PHANTOMJS_PAGE_CUSTOMHEADERS_PREFIX</span><br><span class="line">                        + &quot;User-Agent&quot;,</span><br><span class="line">                &quot;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36&quot;);</span><br><span class="line"></span><br><span class="line">//        caps.setCapability(</span><br><span class="line">//                PhantomJSDriverService.PHANTOMJS_PAGE_CUSTOMHEADERS_PREFIX</span><br><span class="line">//                        + &quot;Proxy-Authorization&quot;,</span><br><span class="line">//                XdailiUtils.getProxyHeader());</span><br><span class="line">        caps.setCapability(PhantomJSDriverService.PHANTOMJS_CLI_ARGS, phantomArgs);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public WebPhantomJsDriverPool() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public  WebPhantomJsDriverPool(int poolsize) &#123;</span><br><span class="line">        this.CAPACITY = poolsize;</span><br><span class="line">        innerQueue = new LinkedBlockingDeque&lt;WebDriver&gt;(poolsize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public  WebDriver get() throws InterruptedException &#123;</span><br><span class="line">        WebDriver poll = innerQueue.poll();</span><br><span class="line">        if (poll != null) &#123;</span><br><span class="line">            return poll;</span><br><span class="line">        &#125;</span><br><span class="line">        if (refCount.get() &lt; CAPACITY) &#123;</span><br><span class="line">            synchronized (innerQueue) &#123;</span><br><span class="line">                if (refCount.get() &lt; CAPACITY) &#123;</span><br><span class="line"></span><br><span class="line">                    PhantomJSDriver mDriver = new PhantomJSDriver(caps);</span><br><span class="line">//                    mDriver.executePhantomJS(&quot;phantom.setProxy(&apos;139.196.172.79:80&apos;)&quot;);</span><br><span class="line">                    mDriver.manage().timeouts().implicitlyWait(5,TimeUnit.SECONDS);</span><br><span class="line">                    mDriver.manage().timeouts().pageLoadTimeout(100,TimeUnit.SECONDS);</span><br><span class="line">                    mDriver.manage().timeouts().setScriptTimeout(10,TimeUnit.SECONDS);</span><br><span class="line">                    mDriver.manage().window().maximize();</span><br><span class="line">                    // mDriver.manage().window().setSize(new Dimension(1366,</span><br><span class="line">                    // 768));</span><br><span class="line">                    innerQueue.add(mDriver);</span><br><span class="line">                    refCount.incrementAndGet();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return innerQueue.take();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void returnToPool(WebDriver webDriver) &#123;</span><br><span class="line">        // webDriver.quit();</span><br><span class="line">        // webDriver=null;</span><br><span class="line">        innerQueue.add(webDriver);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void close(WebDriver webDriver) &#123;</span><br><span class="line">        refCount.decrementAndGet();</span><br><span class="line">        webDriver.close();</span><br><span class="line">        webDriver.quit();</span><br><span class="line">        webDriver = null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void shutdown() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            for (WebDriver driver : innerQueue) &#123;</span><br><span class="line">                close(driver);</span><br><span class="line">            &#125;</span><br><span class="line">            innerQueue.clear();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">//            e.printStackTrace();</span><br><span class="line">            logger.warn(&quot;webdriverpool关闭失败&quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void setProxy(WebDriver webDriver, Proxy proxy) &#123;</span><br><span class="line">        PhantomJSDriver.class.cast(webDriver).executePhantomJS(&quot;phantom.setProxy(&apos;&quot;+proxy.getHost()+&quot;&apos;, &quot;+proxy.getPort()+&quot;)&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="纯js操作phantomjs的方法"><a href="#纯js操作phantomjs的方法" class="headerlink" title="纯js操作phantomjs的方法"></a>纯js操作phantomjs的方法</h4><p>入门级Demo: <a href="https://blog.csdn.net/imlsz/article/details/24325623" target="_blank" rel="noopener">https://blog.csdn.net/imlsz/article/details/24325623</a><br>下载的phantomjs有的example文件夹，里面都是例子，可以和 <a href="http://phantomjs.org/api/" target="_blank" rel="noopener">http://phantomjs.org/api/</a> 结合起来学习。<br>这种方式，相比Selenuim的方式，要麻烦不少，但他非常的快。<br><img src="http://static.zybuluo.com/chenSJ/5bg3kg6znc53hnltpvn9s8pd/2018-04-03_155756.jpg" alt="2018-04-03_155756.jpg-275.8kB"></p><h4 id="CasperJS操作phantomjs的方法"><a href="#CasperJS操作phantomjs的方法" class="headerlink" title="CasperJS操作phantomjs的方法"></a>CasperJS操作phantomjs的方法</h4><p>  casperJs是对操作phantomjs的js进行了一次封装，相比纯js的方法要简单不少，我没有用过，不过看过一个开源项目，有个大佬用这个来操作phantomjs破解极验。（当然是以前的极验）。官网： <a href="http://casperjs.org/" target="_blank" rel="noopener">http://casperjs.org/</a><br>这是这个大佬开源项目的地址： <a href="https://gitee.com/shentong_012/YayCrawler" target="_blank" rel="noopener">https://gitee.com/shentong_012/YayCrawler</a><br>这是casperJs和java相关代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">package yaycrawler.common.utils;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.concurrent.Semaphore;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 管理Casperjs的启动和执行</span><br><span class="line"> * Created by ucs_yuananyun on 2016/6/23.</span><br><span class="line"> */</span><br><span class="line">public class CasperjsProgramManager &#123;</span><br><span class="line">    private static Logger logger = LoggerFactory.getLogger(CasperjsProgramManager.class);</span><br><span class="line">    public static String launch(String jsFileName, List&lt;String&gt; params) &#123;</span><br><span class="line">        return launch(jsFileName, null, params);</span><br><span class="line">    &#125;</span><br><span class="line">    public static String launch(String jsFileName, String pageCharset,List&lt;String&gt; params) &#123;</span><br><span class="line">        if (StringUtils.isBlank(jsFileName)) &#123;</span><br><span class="line">            logger.error(&quot;待执行的js文件名不能为空！&quot;);</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        BufferedReader br = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            if(pageCharset==null) pageCharset = &quot;utf-8&quot;;</span><br><span class="line">            String path = CasperjsProgramManager.class.getResource(&quot;/&quot;).getPath();</span><br><span class="line">            path = path.substring(1, path.lastIndexOf(&quot;/&quot;) + 1);</span><br><span class="line">            String os = System.getProperties().getProperty(&quot;os.name&quot;);</span><br><span class="line">            String casperJsPath = &quot;&quot;;</span><br><span class="line">            String phantomJsPath = &quot;&quot;;</span><br><span class="line">            if (StringUtils.startsWithIgnoreCase(os, &quot;win&quot;)) &#123;</span><br><span class="line">                casperJsPath = path + &quot;casperjs/bin/casperjs.exe&quot;;</span><br><span class="line">                phantomJsPath = path + &quot;phantomjs/window/phantomjs.exe&quot;;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                path = &quot;/&quot; + path;</span><br><span class="line">                casperJsPath = path + &quot;casperjs/bin/casperjs&quot;;</span><br><span class="line">                phantomJsPath = path + &quot;phantomjs/linux/phantomjs&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            logger.info(&quot;CasperJs程序地址:&#123;&#125;&quot;, casperJsPath);</span><br><span class="line">            ProcessBuilder processBuilder = new ProcessBuilder(casperJsPath, jsFileName);</span><br><span class="line">            if (params != null) &#123;</span><br><span class="line">                for (String param : params) &#123;</span><br><span class="line">                    processBuilder.command().add(param);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            processBuilder.command().add(&quot;--output-encoding=&quot;+pageCharset);</span><br><span class="line">            processBuilder.command().add(&quot;--web-security=no&quot;);</span><br><span class="line">            processBuilder.command().add(&quot;--ignore-ssl-errors=true&quot;);</span><br><span class="line"></span><br><span class="line">            processBuilder.directory(new File(path + &quot;casperjs/js&quot;));</span><br><span class="line">            processBuilder.environment().put(&quot;PHANTOMJS_EXECUTABLE&quot;, phantomJsPath);</span><br><span class="line"></span><br><span class="line">            Process p = processBuilder.start();</span><br><span class="line">            InputStream is = p.getInputStream();</span><br><span class="line">            br = new BufferedReader(new InputStreamReader(is, pageCharset));</span><br><span class="line">            StringBuffer sbf = new StringBuffer();</span><br><span class="line">            String tmp = &quot;&quot;;</span><br><span class="line">            while ((tmp = br.readLine()) != null) &#123;</span><br><span class="line">                sbf.append(tmp).append(&quot;\r\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            br.close();</span><br><span class="line">            p.destroy();</span><br><span class="line">            return sbf.toString();</span><br><span class="line">        &#125; catch (IOException ex) &#123;</span><br><span class="line">            logger.error(ex.getMessage());</span><br><span class="line">            return null;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if(br != null)</span><br><span class="line">                try &#123;</span><br><span class="line">                    br.close();</span><br><span class="line">                &#125; catch (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Headless-Chrome"><a href="#Headless-Chrome" class="headerlink" title="Headless Chrome"></a>Headless Chrome</h3><p>这个上文提到的让phantomjs作者失业的新一代无界浏览器，也许是将来流行的无界浏览器。<br>官网：<a href="https://developers.google.cn/web/updates/2017/04/headless-chrome" target="_blank" rel="noopener">https://developers.google.cn/web/updates/2017/04/headless-chrome</a><br>下载：<a href="https://sites.google.com/a/chromium.org/chromedriver/" target="_blank" rel="noopener">https://sites.google.com/a/chromium.org/chromedriver/</a></p><h3 id="webmagic结合Selenium模拟点击动作"><a href="#webmagic结合Selenium模拟点击动作" class="headerlink" title="webmagic结合Selenium模拟点击动作"></a>webmagic结合Selenium模拟点击动作</h3><p>这个刚开始确实是个难题，直到我看到了这个文章： <a href="https://segmentfault.com/a/1190000008194764" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008194764</a><br>所以借鉴这个思路，我自己实现了一个selenium的下载器，它可以放置动作，切换下载器。可以参考一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line">package com.crawler.selenium;</span><br><span class="line"></span><br><span class="line">import org.openqa.selenium.By;</span><br><span class="line">import org.openqa.selenium.Cookie;</span><br><span class="line">import org.openqa.selenium.WebDriver;</span><br><span class="line">import org.openqa.selenium.WebElement;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import us.codecraft.webmagic.Page;</span><br><span class="line">import us.codecraft.webmagic.Request;</span><br><span class="line">import us.codecraft.webmagic.Site;</span><br><span class="line">import us.codecraft.webmagic.Task;</span><br><span class="line">import us.codecraft.webmagic.downloader.AbstractDownloader;</span><br><span class="line">import us.codecraft.webmagic.downloader.HttpClientDownloader;</span><br><span class="line">import us.codecraft.webmagic.proxy.Proxy;</span><br><span class="line">import us.codecraft.webmagic.proxy.ProxyProvider;</span><br><span class="line">import us.codecraft.webmagic.selector.PlainText;</span><br><span class="line">import us.codecraft.webmagic.utils.HttpClientUtils;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by chenshengju on 2017/9/20 0020.</span><br><span class="line"> */</span><br><span class="line">public class SeleniumDownloader  extends AbstractDownloader &#123;</span><br><span class="line">    private static final Logger log= LoggerFactory.getLogger(SeleniumDownloader.class);</span><br><span class="line">    private int sleepTime=3000;//3s</span><br><span class="line">    private SeleniumAction action=null;</span><br><span class="line">    private WebDriverPool webDriverPool=new WebPhantomJsDriverPool();</span><br><span class="line">    private HttpClientDownloader httpClientDownloader=new HttpClientDownloader();</span><br><span class="line">    private ProxyProvider proxyProvider;</span><br><span class="line"></span><br><span class="line">    public SeleniumDownloader()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    public SeleniumDownloader(WebDriverPool pool)&#123;</span><br><span class="line">        this(null,pool,null);</span><br><span class="line">    &#125;</span><br><span class="line">    public SeleniumDownloader(SeleniumAction action)&#123;</span><br><span class="line">        this(null,null,action);</span><br><span class="line">    &#125;</span><br><span class="line">    public SeleniumDownloader (Integer sleepTime) &#123;</span><br><span class="line">        this(sleepTime,null,null);</span><br><span class="line">    &#125;</span><br><span class="line">    public SeleniumDownloader(Integer sleepTime, WebDriverPool pool, SeleniumAction action)&#123;</span><br><span class="line">        if(sleepTime!=null)</span><br><span class="line">        &#123;</span><br><span class="line">            this.sleepTime=sleepTime;</span><br><span class="line">        &#125;</span><br><span class="line">        if(action!=null)</span><br><span class="line">        &#123;</span><br><span class="line">            this.action=action;</span><br><span class="line">        &#125;</span><br><span class="line">        if(pool!=null)&#123;</span><br><span class="line">            webDriverPool=pool;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setProxyProvider(ProxyProvider proxyProvider) &#123;</span><br><span class="line">        this.httpClientDownloader.setProxyProvider(proxyProvider);</span><br><span class="line">        this.proxyProvider = proxyProvider;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Page download(Request request, Task task) &#123;</span><br><span class="line">       Proxy proxy = proxyProvider != null ? proxyProvider.getProxy(task) : null;</span><br><span class="line">        Site site = task.getSite();</span><br><span class="line">        WebDriverPool webDriverPoolNow=webDriverPool;</span><br><span class="line">        if( request.getExtra(SeleniumDownloaderService.FAST_DOWNLOAD)!=null)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            return httpClientDownloader.download(request,task);</span><br><span class="line">        &#125;</span><br><span class="line">        if(request.getExtra(SeleniumDownloaderService.OTHER_WEB_DRIVER)!=null)</span><br><span class="line">        &#123;</span><br><span class="line">            webDriverPoolNow = (WebDriverPool) request.getExtra(SeleniumDownloaderService.OTHER_WEB_DRIVER);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        WebDriver webDriver;</span><br><span class="line">        try &#123;</span><br><span class="line">            webDriver = webDriverPoolNow.get();</span><br><span class="line">            if(site.isDisableCookieManagement())</span><br><span class="line">            &#123;</span><br><span class="line">                webDriver.manage().deleteAllCookies();</span><br><span class="line">            &#125;</span><br><span class="line">            if(proxyProvider!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                webDriverPoolNow.setProxy(webDriver,proxy);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            log.warn(&quot;interrupted&quot;, e);</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(&quot;downloading page &quot; + request.getUrl());</span><br><span class="line">        //内容</span><br><span class="line">        String content=&quot;&quot;;</span><br><span class="line">        Page page = new Page();</span><br><span class="line">        WebDriver.Options manage = webDriver.manage();</span><br><span class="line">        if (site.getCookies() != null) &#123;</span><br><span class="line">            for (Map.Entry&lt;String, String&gt; cookieEntry : site.getCookies()</span><br><span class="line">                    .entrySet()) &#123;</span><br><span class="line">                Cookie cookie = new Cookie(cookieEntry.getKey(),</span><br><span class="line">                        cookieEntry.getValue());</span><br><span class="line">                manage.addCookie(cookie);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        try &#123;</span><br><span class="line">            webDriver.get(request.getUrl());</span><br><span class="line">            Thread.sleep(sleepTime);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            webDriverPoolNow.close(webDriver);</span><br><span class="line">            onError(request);</span><br><span class="line">//            page.setSkip(true);</span><br><span class="line">            return Page.fail();</span><br><span class="line">        &#125;</span><br><span class="line">        WebElement webElement = webDriver.findElement(By.xpath(&quot;/html&quot;));</span><br><span class="line">        content=webElement.getAttribute(&quot;outerHTML&quot;);</span><br><span class="line">        page.setRawText(content);</span><br><span class="line">        page.setRequest(request);</span><br><span class="line">//        WindowUtil.changeWindow(webDriver);</span><br><span class="line"></span><br><span class="line">//        manage.window().maximize();</span><br><span class="line">        if(action!=null)&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                action.execute(webDriver);</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        SeleniumAction reqAction=(SeleniumAction) request.getExtra(SeleniumDownloaderService.ACTION);</span><br><span class="line">        if(reqAction!=null)&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">               reqAction.execute(webDriver);</span><br><span class="line">                Thread.sleep(sleepTime);</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">                webDriverPoolNow.close(webDriver);</span><br><span class="line">                log.error(&quot;浏览器发生异常&quot;+e.getMessage());</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Object obj = request.getExtra(SeleniumDownloaderService.ACTION_HTMLS);</span><br><span class="line">        if(obj !=null)</span><br><span class="line">        &#123;</span><br><span class="line">            if(obj instanceof SeleniumHtmlAction)</span><br><span class="line">            &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    ((SeleniumHtmlAction)obj).execute(webDriver,page);</span><br><span class="line">                    Thread.sleep(sleepTime);</span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    webDriverPoolNow.close(webDriver);</span><br><span class="line">                    onError(request);</span><br><span class="line">                    log.error(&quot;浏览器发生异常&quot;+e.getMessage());</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    return Page.fail();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else if(obj instanceof SeleniumHtmlAction[])</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                SeleniumHtmlAction[] htmlActionList=(SeleniumHtmlAction[]) obj;</span><br><span class="line">                try &#123;</span><br><span class="line">                    for (SeleniumHtmlAction seleniumAction : htmlActionList) &#123;</span><br><span class="line">                        seleniumAction.execute(webDriver,page);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    webDriverPoolNow.close(webDriver);</span><br><span class="line">                    onError(request);</span><br><span class="line">                    log.error(&quot;浏览器发生异常&quot;+e.getMessage());</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    return Page.fail();                &#125;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                throw new RuntimeException(SeleniumDownloaderService.ACTION_HTMLS+&quot;只能为SeleniumHtmlAction的实现类或数组&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">//        page.setHtml(new Html(UrlUtils.fixAllRelativeHrefs(content,</span><br><span class="line">//                webDriver.getCurrentUrl())));</span><br><span class="line">//        page.setUrl(new PlainText(webDriver.getCurrentUrl()));</span><br><span class="line">        page.setUrl(new PlainText(request.getUrl()));</span><br><span class="line">        page.setRequest(request);</span><br><span class="line">//        page.setStatusCode(httpResponse.getStatusLine().getStatusCode());</span><br><span class="line">        page.setDownloadSuccess(true);</span><br><span class="line">//        if (this.responseHeader) &#123;</span><br><span class="line">//            page.setHeaders(HttpClientUtils.convertHeaders(httpResponse.getAllHeaders()));</span><br><span class="line">//        &#125;</span><br><span class="line">        webDriverPoolNow.returnToPool(webDriver);</span><br><span class="line">        if (proxyProvider != null &amp;&amp; proxy != null) &#123;</span><br><span class="line">            proxyProvider.returnProxy(proxy, page, task);</span><br><span class="line">        &#125;</span><br><span class="line">        return page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void setThread(int thread) &#123;</span><br><span class="line">        this.httpClientDownloader.setThread(thread);</span><br><span class="line">        this.httpClientDownloader.setProxyProvider(this.proxyProvider);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package com.crawler.selenium;</span><br><span class="line"></span><br><span class="line">import org.openqa.selenium.WebDriver;</span><br><span class="line">import us.codecraft.webmagic.Page;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by chenshengju on 2017/9/25 0025.</span><br><span class="line"> */</span><br><span class="line">public interface SeleniumHtmlAction &#123;</span><br><span class="line">    void execute(WebDriver driver, Page page) throws Exception;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package com.crawler.selenium;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by chenshengju on 2017/9/30 0030.</span><br><span class="line"> * 用于拓展Request的一种方法</span><br><span class="line"> */</span><br><span class="line">public class SeleniumDownloaderService &#123;</span><br><span class="line">    //是否使是httpClient下载</span><br><span class="line">    public static final String FAST_DOWNLOAD=&quot;fastDownload&quot;;</span><br><span class="line">    //是否用其他的驱动来下载</span><br><span class="line">    public static final String OTHER_WEB_DRIVER=&quot;otherWebDriver&quot;;</span><br><span class="line">    //是否是一得到page的动作</span><br><span class="line">    public static final String ACTION_HTMLS=&quot;actionHtmls&quot;;</span><br><span class="line">    //是否是动作</span><br><span class="line">    public static final String ACTION=&quot;action&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我用这个在天眼查网站上进行过翻页爬取。天猫还没试过</p><h2 id="断点继爬"><a href="#断点继爬" class="headerlink" title="断点继爬"></a>断点继爬</h2><p>webmagic自带的方案是文件系统，和redis,<br>文件系统：<code>spider.setScheduler(new FileCacheQueueScheduler(&quot;&quot;))</code><br>redis:<code>spider.setScheduler(new RedisPriorityScheduler(&quot;&quot;));</code><br>但遗憾的是这两种方式在我使用中和读源码后发现都有一定的缺陷（0.7.3版本中）<br>所以我自己实现了一种redis断点的方案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">package com.jgs;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by chenshengju on 2018/2/14.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import org.apache.commons.codec.digest.DigestUtils;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line">import redis.clients.jedis.JedisPool;</span><br><span class="line">import redis.clients.jedis.JedisPoolConfig;</span><br><span class="line">import us.codecraft.webmagic.Request;</span><br><span class="line">import us.codecraft.webmagic.Task;</span><br><span class="line">import us.codecraft.webmagic.scheduler.DuplicateRemovedScheduler;</span><br><span class="line">import us.codecraft.webmagic.scheduler.MonitorableScheduler;</span><br><span class="line">import us.codecraft.webmagic.scheduler.component.DuplicateRemover;</span><br><span class="line"></span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Use Redis as url scheduler for distributed crawlers.&lt;br&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author code4crafter@gmail.com &lt;br&gt;</span><br><span class="line"> * @since 0.2.0</span><br><span class="line"> */</span><br><span class="line">public class FIFOPriorityRedisScheduler extends DuplicateRemovedScheduler implements MonitorableScheduler, DuplicateRemover &#123;</span><br><span class="line"></span><br><span class="line">    protected JedisPool pool;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static final String QUEUE_PREFIX = &quot;queue_&quot;;</span><br><span class="line"></span><br><span class="line">    private static final String PRIORITY_PREFIX = &quot;priority_&quot;;</span><br><span class="line"></span><br><span class="line">    private static final String PRIORITYNUM_PREFIX = &quot;priorityNum_&quot;;</span><br><span class="line"></span><br><span class="line">    private static final String SET_PREFIX = &quot;set_&quot;;</span><br><span class="line"></span><br><span class="line">    private static final String ITEM_PREFIX = &quot;item_&quot;;</span><br><span class="line"></span><br><span class="line">    private static final String BREAK_PREFIX = &quot;break_&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public FIFOPriorityRedisScheduler(String host )&#123;</span><br><span class="line">        this(new JedisPool(new JedisPoolConfig(), host));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public FIFOPriorityRedisScheduler(JedisPool pool) &#123;</span><br><span class="line">        this.pool = pool;</span><br><span class="line">        setDuplicateRemover(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void resetDuplicateCheck(Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            jedis.del(getSetKey(task));</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean isDuplicate(Request request, Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            return jedis.sadd(getSetKey(task), request.getUrl()) == 0;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void pushWhenNoDuplicate(Request request, Task task) &#123;</span><br><span class="line">        long priority=  request.getPriority();</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            jedis.zadd(getPriorityNumKey(task),priority,priority+&quot;&quot;);</span><br><span class="line">            jedis.rpush(getQueueKey(task,priority+&quot;&quot;), request.getUrl());</span><br><span class="line">            jedis.rpush(getBreakKey(task), request.getUrl());</span><br><span class="line">            if (CheckForAdditionalInfo(request)) &#123;</span><br><span class="line">                String field = DigestUtils.shaHex(request.getUrl());</span><br><span class="line">                String value = JSON.toJSONString(request);</span><br><span class="line">                jedis.hset((ITEM_PREFIX + task.getUUID()), field, value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected boolean CheckForAdditionalInfo(Request request) &#123;</span><br><span class="line">        if (request == null) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (!request.getHeaders().isEmpty() || !request.getCookies().isEmpty()) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (StringUtils.isNotBlank(request.getCharset()) || StringUtils.isNotBlank(request.getMethod())) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (request.isBinaryContent() || request.getRequestBody() != null) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (request.getExtras() != null &amp;&amp; !request.getExtras().isEmpty()) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        if (request.getPriority() != 0L) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public synchronized Request poll(Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            String url=null;</span><br><span class="line">            Set&lt;String&gt; prioritySet = jedis.zrevrange(getPriorityNumKey(task), 0, -1);</span><br><span class="line">            for (String priority : prioritySet) &#123;</span><br><span class="line">                 url= jedis.lpop(getQueueKey(task, priority));</span><br><span class="line">                 if(url!=null)</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (url == null) &#123;</span><br><span class="line">                return null;</span><br><span class="line">            &#125;</span><br><span class="line">            String key = ITEM_PREFIX + task.getUUID();</span><br><span class="line">            String field = DigestUtils.shaHex(url);</span><br><span class="line">            byte[] bytes = jedis.hget(key.getBytes(), field.getBytes());</span><br><span class="line">            if (bytes != null) &#123;</span><br><span class="line">                Request o = JSON.parseObject(new String(bytes), Request.class);</span><br><span class="line">                return o;</span><br><span class="line">            &#125;</span><br><span class="line">            Request request = new Request(url);</span><br><span class="line">            return request;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected String getSetKey(Task task) &#123;</span><br><span class="line">        return SET_PREFIX + task.getUUID();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected  String getQueueKey(Task task,String priority) &#123;</span><br><span class="line">        return PRIORITY_PREFIX + priority + QUEUE_PREFIX + task.getUUID();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    protected  String getBreakKey(Task task) &#123;</span><br><span class="line">        return BREAK_PREFIX  + task.getUUID();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    protected  String getPriorityNumKey(Task task) &#123;</span><br><span class="line">        return PRIORITYNUM_PREFIX  + task.getUUID();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    protected String getItemKey(Task task) &#123;</span><br><span class="line">        return ITEM_PREFIX + task.getUUID();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int getLeftRequestsCount(Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        long size=0;</span><br><span class="line">        try &#123;</span><br><span class="line">            Set&lt;String&gt; prioritySet = jedis.zrevrange(getPriorityNumKey(task), 0, -1);</span><br><span class="line">            for (String priority : prioritySet)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                 size+=jedis.llen(getQueueKey(task,priority));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return (int) size;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int getTotalRequestsCount(Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            Long size = jedis.scard(getSetKey(task));</span><br><span class="line">            return size.intValue();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public interface CanBreak &#123;</span><br><span class="line">       void removeBreak(String url,Task task);</span><br><span class="line">       List getAllQueue(Task task);</span><br><span class="line">       List getBreakQueue(Task task);</span><br><span class="line"></span><br><span class="line">    void addQueue(List&lt;String&gt; breakQueue,Task task);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">package com.jgs;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by chenshengju on 2018/2/14.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import org.apache.commons.codec.digest.DigestUtils;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line">import redis.clients.jedis.JedisPool;</span><br><span class="line">import redis.clients.jedis.JedisPoolConfig;</span><br><span class="line">import us.codecraft.webmagic.Request;</span><br><span class="line">import us.codecraft.webmagic.Task;</span><br><span class="line">import us.codecraft.webmagic.scheduler.DuplicateRemovedScheduler;</span><br><span class="line">import us.codecraft.webmagic.scheduler.MonitorableScheduler;</span><br><span class="line">import us.codecraft.webmagic.scheduler.component.DuplicateRemover;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Use Redis as url scheduler for distributed crawlers.&lt;br&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author code4crafter@gmail.com &lt;br&gt;</span><br><span class="line"> * @since 0.2.0</span><br><span class="line"> */</span><br><span class="line">public class FIFOBreakPriorityRedisScheduler extends FIFOPriorityRedisScheduler  implements CanBreak &#123;</span><br><span class="line"></span><br><span class="line">    protected JedisPool pool;</span><br><span class="line">    private static final String BREAK_PREFIX = &quot;break_&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public FIFOBreakPriorityRedisScheduler(String host) &#123;</span><br><span class="line">        this(new JedisPool(new JedisPoolConfig(), host));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public FIFOBreakPriorityRedisScheduler(JedisPool pool) &#123;</span><br><span class="line">        super(pool);</span><br><span class="line">        this.pool = pool;</span><br><span class="line">        setDuplicateRemover(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void pushWhenNoDuplicate(Request request, Task task) &#123;</span><br><span class="line">        long priority = request.getPriority();</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            jedis.zadd(getPriorityNumKey(task), priority, priority + &quot;&quot;);</span><br><span class="line">            jedis.rpush(getQueueKey(task, priority + &quot;&quot;), request.getUrl());</span><br><span class="line">            jedis.rpush(getBreakQueueKey(task), request.getUrl());</span><br><span class="line">            if (CheckForAdditionalInfo(request)) &#123;</span><br><span class="line">                String field = DigestUtils.shaHex(request.getUrl());</span><br><span class="line">                String value = JSON.toJSONString(request);</span><br><span class="line">                jedis.hset(getItemKey(task), field, value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected  String getBreakQueueKey(Task task) &#123;</span><br><span class="line">        return BREAK_PREFIX  + task.getUUID();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void removeBreak(String url, Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            jedis.lrem(getBreakQueueKey(task), 1, url);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List getAllQueue(Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        List allQueue = new ArrayList();</span><br><span class="line">        try &#123;</span><br><span class="line">            Set&lt;String&gt; prioritySet = jedis.zrevrange(getPriorityNumKey(task), 0, -1);</span><br><span class="line">            for (String priority : prioritySet) &#123;</span><br><span class="line">                allQueue.addAll(jedis.lrange(getQueueKey(task, priority), 0, -1));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">            return allQueue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public List getBreakQueue (Task task)&#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        List allBreakQueue = new ArrayList();</span><br><span class="line">        try &#123;</span><br><span class="line">            allBreakQueue.addAll(jedis.lrange(getBreakQueueKey(task), 0, -1));</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">        return allBreakQueue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addQueue(List&lt;String&gt; breakQueue,Task task) &#123;</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        try &#123;</span><br><span class="line">            Set&lt;String&gt; prioritySet = jedis.zrevrange(getPriorityNumKey(task), 0, 0);</span><br><span class="line"></span><br><span class="line">            String priority = prioritySet.toArray(new String[1])[0];</span><br><span class="line">            if(priority==null||breakQueue.isEmpty())</span><br><span class="line">                return;</span><br><span class="line">            jedis.rpush(getQueueKey(task, priority), breakQueue.toArray(new String[breakQueue.size()]));</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            pool.returnResource(jedis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main方法中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Spider spider = Spider.create(webmagicXfplay).addUrl(urls).setDownloader(httpClientDownloader).addPipeline(new ImagePipeline()).thread(5);</span><br><span class="line">      FIFOBreakPriorityRedisScheduler scheduler = new FIFOBreakPriorityRedisScheduler(&quot;localhost&quot;);</span><br><span class="line">      List&lt;SpiderListener&gt; spiderListeners = new ArrayList&lt;&gt;();</span><br><span class="line">      spiderListeners.add(new BreakSpiderListener(scheduler,spider));</span><br><span class="line">      spider.setSpiderListeners(spiderListeners);</span><br></pre></td></tr></table></figure><h2 id="代理问题"><a href="#代理问题" class="headerlink" title="代理问题"></a>代理问题</h2><p>有的网站做了反爬虫处理，如果一个ip访问次数达到一个峰值，那么就会封了这个ip<br>这时我们只能找代理了，网上有很多免费的代理，但都不一定好用，因为，代理ip分为三种，<br>透明代理：网站知道你用了代理，也知道你原来的ip是多少<br>匿名代理：网站知道你用了代理，但不知道你原来的ip是多少<br>高匿代理：网站有知道你用了代理，也不知道你原来的ip是多少<br>而网上的一些免费代理大都是透明，或者匿名代理。<br>有的变态网站，只有你用了高匿代理才行。。。。<br>我个人用过三类代理：<br> <a href="http://www.data5u.com/" target="_blank" rel="noopener">http://www.data5u.com/</a>  (质量不错，态度冷淡)<br>我用的是爬虫代理，访问一次api返回一个，但这个每秒只能请求两次，多了就不给你ip了。。。<br>所以可以用木桶算法来进行限流</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">package com.crawler.proxy;</span><br><span class="line"></span><br><span class="line">import com.crawler.HttpsUtils;</span><br><span class="line">import com.crawler.proxyutils.Data5uProxyHelper;</span><br><span class="line">import com.google.common.base.Splitter;</span><br><span class="line">import com.google.common.collect.Lists;</span><br><span class="line">import com.google.common.util.concurrent.RateLimiter;</span><br><span class="line">import com.jgs.industry.testip.U5IpSource;</span><br><span class="line">import com.virjar.dungproxy.client.httpclient.HttpInvoker;</span><br><span class="line">import com.virjar.dungproxy.client.model.AvProxyVO;</span><br><span class="line">import com.virjar.dungproxy.client.util.CommonUtil;</span><br><span class="line">import com.virjar.dungproxy.client.util.PoolUtil;</span><br><span class="line">import org.apache.commons.io.LineIterator;</span><br><span class="line">import org.apache.commons.lang3.math.NumberUtils;</span><br><span class="line">import org.apache.http.client.protocol.HttpClientContext;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import us.codecraft.webmagic.Page;</span><br><span class="line">import us.codecraft.webmagic.Task;</span><br><span class="line">import us.codecraft.webmagic.proxy.Proxy;</span><br><span class="line">import us.codecraft.webmagic.proxy.ProxyProvider;</span><br><span class="line"></span><br><span class="line">import java.io.StringReader;</span><br><span class="line">import java.util.Iterator;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.concurrent.LinkedBlockingQueue;</span><br><span class="line">import java.util.concurrent.ThreadPoolExecutor;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line">import java.util.concurrent.locks.ReentrantLock;</span><br><span class="line">import java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by chenshengju on 2017/12/16.</span><br><span class="line"> */</span><br><span class="line">public class Date5uProxyProvider implements ProxyProvider &#123;</span><br><span class="line">    private static final Logger logger = LoggerFactory.getLogger(U5IpSource.class);</span><br><span class="line">    /**</span><br><span class="line">     * 无忧代理每次只能返回几个IP,但是短时间可以多次获取IP</span><br><span class="line">     */</span><br><span class="line">    /**</span><br><span class="line">     * 无忧代理提取地址</span><br><span class="line">     */</span><br><span class="line">    private static String url = &quot;http://api.ip.data5u.com/dynamic/get.html?order=12345678&amp;sep=3&quot;;</span><br><span class="line">    // 无忧代理每秒不能超过5此,所以添加限流器,我们发现无忧代理的实现不是这个规则,没有超过5此也会被封,测试发现每秒可以请求2次</span><br><span class="line">    private RateLimiter rateLimiter = RateLimiter.create(2);//</span><br><span class="line">    private static Proxy proxyTemp;</span><br><span class="line"></span><br><span class="line">    public Date5uProxyProvider() &#123;</span><br><span class="line">        //为了防止第一次请求多个线程争取口令牌，而抢不到，从而尴尬地出现proxyTemp为空的情况</span><br><span class="line">        while (proxyTemp==null)</span><br><span class="line">        &#123;</span><br><span class="line">            proxyTemp=getData5u();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Proxy getProxy(Task task) &#123;</span><br><span class="line">        Proxy proxy=proxyTemp;</span><br><span class="line">        if (rateLimiter.tryAcquire(1, 500, TimeUnit.MILLISECONDS)) &#123;// 500毫秒等待令牌桶的释放,guava限流器基于令牌桶算法</span><br><span class="line">            Proxy proxyData5u=getData5u();</span><br><span class="line">            if(proxyData5u!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                proxy=proxyData5u;</span><br><span class="line">                proxyTemp=proxy;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            logger.info(&quot;请求过于频繁,放弃本次请求&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(&quot;本次ip为&#123;&#125;&quot;,proxy.getHost());</span><br><span class="line">        return proxy;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void returnProxy(Proxy proxy, Page page, Task task) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public Proxy getData5u()</span><br><span class="line">    &#123;</span><br><span class="line">        Proxy proxy=null;</span><br><span class="line">        String ipAndPort= null;</span><br><span class="line">        try &#123;</span><br><span class="line">            ipAndPort = HttpsUtils.get(url).trim();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            logger.info(&quot;无忧代理访问网络异常&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        String[] ss = ipAndPort.split(&quot;:&quot;);</span><br><span class="line">        Pattern ipAndPortPattern = Pattern.compile(&quot;([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))&#123;3&#125;:\\d&#123;1,6&#125;&quot;);</span><br><span class="line">        if(ipAndPortPattern.matcher(ipAndPort).find())</span><br><span class="line">        &#123;</span><br><span class="line">            proxy = new Proxy(ss[0],Integer.parseInt(ss[1]));</span><br><span class="line">        &#125;</span><br><span class="line">        return proxy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <a href="http://h.zhimaruanjian.com/" target="_blank" rel="noopener">http://h.zhimaruanjian.com/</a>  (能用，质量不清楚，态度一般)<br> <a href="http://www.xdaili.cn/" target="_blank" rel="noopener">http://www.xdaili.cn/</a>  (动态代理在2017年11月老是听说不太稳，现在不知道怎么样了，不过态度不错，动态代理不能用于无界浏览器)<br>这三类代理都各有特色吧，说不上谁好，只能说挑适合自己的</p><h3 id="Seleninum-phantomjs动态设置代理的问题"><a href="#Seleninum-phantomjs动态设置代理的问题" class="headerlink" title="Seleninum+phantomjs动态设置代理的问题"></a>Seleninum+phantomjs动态设置代理的问题</h3><p>这个问题困扰了我一段时间，网上都没有这方面的教程，后来我自己去啃源码和英文文档才知道方法<br><code>PhantomJSDriver.class.cast(webDriver).executePhantomJS(&quot;phantom.setProxy(&#39;&quot;+proxy.getHost()+&quot;&#39;, &quot;+proxy.getPort()+&quot;)&quot;);</code><br>phantomjs+js仿照这个也可以动态设置</p><h3 id="Seleninum-chrome设置代理的问题"><a href="#Seleninum-chrome设置代理的问题" class="headerlink" title="Seleninum+chrome设置代理的问题"></a>Seleninum+chrome设置代理的问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CHROME_PATH = SeleniumConfig.chromePath;</span><br><span class="line">       System.setProperty(ChromeDriverService.CHROME_DRIVER_EXE_PROPERTY,CHROME_PATH);</span><br><span class="line">       caps.setJavascriptEnabled(true);</span><br><span class="line">       ChromeOptions chromeOptions = new ChromeOptions() ;</span><br><span class="line">       chromeOptions.addArguments(&quot;--proxy-server=http://&quot;+proxyExpire.getHost()+&quot;:&quot;+proxyExpire.getPort());</span><br><span class="line">       caps.setCapability(ChromeOptions.CAPABILITY, chromeOptions);</span><br><span class="line">       WebDriver mDriver = new ChromeDriver(caps);</span><br></pre></td></tr></table></figure><p>但遗憾的是我并没有找到动态设置代理的方法，启动完chrome后，除非关了这个chrome,再重启，要不然没有办法。也许现在新的chrome有方式可以办到吧。</p><h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><p>这个可以用TesseractOcr来识别，但难度挻大，搞定这个，也就成了图像识别高手了。所以最简单的方法是用打码平台。<br>在很久以前没有机器学习的时候，打码平台背后是一群真正的人来手工打码，但有了机器学习后，打码平台也用上了这玩意。但有的时候我们也可以利用机器学习来训练。可能机器学习听起来很难，但如果只用用他的api的话，也是可以做到不错的效果的。可以用TensorFlow或者Darknet来，这方面我也不是很懂，也是我的同事做过这方面的事。</p><h3 id="极验"><a href="#极验" class="headerlink" title="极验"></a>极验</h3><p><a href="https://zhuanlan.zhihu.com/p/28492887" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/28492887</a><br><a href="https://blog.csdn.net/u011153869/article/details/71077415" target="_blank" rel="noopener">https://blog.csdn.net/u011153869/article/details/71077415</a><br>这是当初极验的一些破解方法，当然现在已经没有用了，但这仍然有一定参考的价值。</p><h2 id="爬虫分布式"><a href="#爬虫分布式" class="headerlink" title="爬虫分布式"></a>爬虫分布式</h2><p>爬虫分布式咋一听，好像是个高大上的东西，但我了解过后反而有点大失所望。所谓的分布式只是把url的存取队列改成了redis,这样多台机器上的爬虫程序共享这个队列，这样就可以通过加机器来提升速度，这也就是分布式爬虫，我以为只是wemagic这么实现的，后来粗略学习了下scrapy，发现分布式爬虫也就这么回事。<br><code>`spider.setScheduler(new RedisPriorityScheduler(&quot;localhost&quot;));</code>用这个方法就可以是分布式了<br> <a href="https://gitee.com/shentong_012/YayCrawler" target="_blank" rel="noopener">https://gitee.com/shentong_012/YayCrawler</a> 这个项目反倒有点分布式的意味。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; java爬虫从入门到初级&lt;br&gt;
    
    </summary>
    
      <category term="java 爬虫 webmagic" scheme="http://yoursite.com/categories/java-%E7%88%AC%E8%99%AB-webmagic/"/>
    
    
  </entry>
  
  <entry>
    <title>国家企业信用信息公示系统爬虫设计思路</title>
    <link href="http://yoursite.com/2018/03/31/%E5%9B%BD%E5%AE%B6%E4%BC%81%E4%B8%9A%E4%BF%A1%E7%94%A8%E4%BF%A1%E6%81%AF%E5%85%AC%E7%A4%BA%E7%B3%BB%E7%BB%9F%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/"/>
    <id>http://yoursite.com/2018/03/31/国家企业信用信息公示系统爬虫设计思路/</id>
    <published>2018-03-31T01:41:12.000Z</published>
    <updated>2018-04-05T14:54:12.901Z</updated>
    
    <content type="html"><![CDATA[<p> 写一下设计的思路<br><a id="more"></a></p><hr><h1 id="国家企业信用信息公示系统爬虫设计思路"><a href="#国家企业信用信息公示系统爬虫设计思路" class="headerlink" title="国家企业信用信息公示系统爬虫设计思路"></a>国家企业信用信息公示系统爬虫设计思路</h1><hr><p>现在的网站变了，不光是验证码，而且网站的整体结构也有也变化，这里面的大部分代码也都已经无效了。但其中一些解决问题的思路还是有一参考价值的</p><p>爬取的逻辑，定时轮询ftp服务器上的名单，如果有bank**.txt名单文件，并且相应的名称没有.ok文件,说明这个文件还没有进行爬取，那么把这个文件下载下来后，开始执行爬虫程序。轮询的程序在frcbRep中，爬虫程序在com包下，并且入口在这个方法里<img src="http://static.zybuluo.com/chenSJ/rprth04pey47yuuknvvpskwj/2018-04-05_213431.jpg" alt="2018-04-05_213431.jpg-223.6kB">，把下载下来的文件路径传入这方法。<br><code>geetestKey=GeetestUtils.getGeetestKey();</code>这行代码是为了得到3个关键的参数，这三个参数我要详细的说明一下。</p><h3 id="三个参数"><a href="#三个参数" class="headerlink" title="三个参数"></a>三个参数</h3><p>广东企业信用信息网站所用的极验是很老的那一种，当滑块划过后，只要长度对了，那么就能通过验证，并且生成3个参数。这三个参数加上查询的关键字，就可以查出相关的公司查询结果页，一般情况下，这三个参数只能匹配一个查询的关键字。但这个网站bug就在这个地方，这三个关键字可以配合cookie可以使用多次，查询不同的公司名，通过这个bug,我们只要滑动一次我们就可以得到这三个参数，然后，查询多次，根据我的发现，对方网站并没有对查询的数量作出限制，哪怕是ip也不会封锁，我利用这个特性，一个小时就爬取了两万条公司的查询结果页。<br><code>geetestKey=GeetestUtils.getGeetestKey();</code>所以这行代码就是为了得到3个查询参数，从而使后面的查询不用再去模拟滑块的动作。模拟滑块的动作是极奇消耗时间的，所以这种取巧的方法极大的加快了爬虫的速度。但也使代码的复杂度增加了，这个在配置文件决定是否使用他</p><h3 id="301重定向"><a href="#301重定向" class="headerlink" title="301重定向"></a>301重定向</h3><p>我们对这个这个老版本的js进行过研究，我们发现如果对这个js进行改编，完全可以不用计算滑块图片的缺口距离。只要滑动就可以通过验证，哪怕你滑动的距离是错误的。那么如何使访问这个网站的时候，把js变为我们的js呢，当时我的解决办法，就是通过操作phantomjs来把这个js 301重定向到我们本地的js,<br><img src="http://static.zybuluo.com/chenSJ/7zmze808ge8qwem2yq5gqru8/2018-04-05_220051.jpg" alt="2018-04-05_220051.jpg-212.1kB">这样的话，就能执行我们给他定制的js了。这样随便滑动就可以通过，这样又省去了图片运算的时间，加快的速度，但这样，代码的复杂度又增加了。这个在配置文件决定是否使用他<br>这个就是当时的修改的js文件<br><img src="http://static.zybuluo.com/chenSJ/ehk9c2218vvdu3u3bp6j1667/2018-04-05_224904.jpg" alt="2018-04-05_224904.jpg-67.3kB"></p><h3 id="phantomjs如何和java通信？"><a href="#phantomjs如何和java通信？" class="headerlink" title="phantomjs如何和java通信？"></a>phantomjs如何和java通信？</h3><p>这里来了个问题，phantomjs得到了那三个参数，这是他内部js得到的，和我们的js是没有啥关系的，虽然说上图中的<code>phantomJSDriver.executePhantomJS()</code>这个方法是可以返回一些东西的，但这种比较特殊，返回不了，这是一个难点，后来通过查询官网，我了解到phantomjs是可以写文件的，那么，得到了这三个参数后，生成这三个参数的文件，那么java在读取这个文件，从而达到了通信的效果。所以在上图中<code>phantomJSDriver.executePhantomJS()</code>这个方法我写了js生成三个参数的文件代码。<img src="http://static.zybuluo.com/chenSJ/dx9f2f7g836peg1ryfyukg47/2018-04-05_221133.jpg" alt="2018-04-05_221133.jpg-65.5kB"></p><h2 id="开始爬取了"><a href="#开始爬取了" class="headerlink" title="开始爬取了"></a>开始爬取了</h2><p>得到了三个参数后，爬虫开始疯狂的查询公司名称，并且得公司页面的详情url,所谓的详情url就是我们要提取字段的最终页面的url地址，当时我是推测这个url应该是永久的，所以我加入缓存机制，查询后，把这个url存进去，如果下次再查询这个公司的话，那么就跳过查询阶段直接访问最终页面。这样又可以加快速度，但代码的复杂度又提高了，下图是我缓存的url,<br><img src="http://static.zybuluo.com/chenSJ/8a3y21d1u91qi2mimrza8c2a/2018-04-05_221629.jpg" alt="2018-04-05_221629.jpg-582kB"></p><h2 id="查询的逻辑是什么？"><a href="#查询的逻辑是什么？" class="headerlink" title="查询的逻辑是什么？"></a>查询的逻辑是什么？</h2><p>这是要查询的公司部分名单，<br><img src="http://static.zybuluo.com/chenSJ/veb1g8jd256u1r9a20w7mn53/2018-04-05_221832.jpg" alt="2018-04-05_221832.jpg-105.2kB">先是通过公司名称来查询，如果搜索的结果页为空，那么再用公司的组织机构号来查询，如果组织机构号也为空的话，那么这个公司的是查询不到的，这个时候程序又会生成一个查询不到的公司名单，下次再爬取的时候，就会忽略这个查不到公司的名单了，这样加快的爬虫的速度，但代码的复杂度又增加了。这里小问题，公司名单上有些有括号，这括号，又有点坑了，有的是中文括号，有的是英文括号，最麻烦的是企业信用网它的查询结果，括号也是有可能是英文的，或者是中文的，这对匹配查询结果又造成的麻烦，有的查询结果可能还有空格，所以我通通把括号和空格去了再去匹配，还有一个麻烦的是我发现有的公司查询出来的可能有多个，可能有的是注销了的，有的是没注销的，所以如果查询出来的结果有多条的话，那么再去匹配一下公司的机构号，这样的话也就万无一失了，也许还有更坑的东西我没发现吧。</p><h2 id="两个不同的结构"><a href="#两个不同的结构" class="headerlink" title="两个不同的结构"></a>两个不同的结构</h2><p>这个网站还有一个坑的地方就是公司的详情页可能有三种域名，其中两种网站的结构是一样的，这没什么问题，还有一种是深圳公司专有的网页结构，所以网页结构分为两种，我对这两种作了判断，深圳的是一套方案，非深圳的又是一套方案。这又把代码弄复杂了，哎。。。</p><h2 id="对于是否经营异常企业的判断"><a href="#对于是否经营异常企业的判断" class="headerlink" title="对于是否经营异常企业的判断"></a>对于是否经营异常企业的判断</h2><p><img src="http://static.zybuluo.com/chenSJ/n56a3yxlarg7pgigks3tbha9/2018-04-05_223342.jpg" alt="2018-04-05_223342.jpg-208.7kB"><br>如果在这一页有记录，且没有“移除经营异常的记录”，那么这个企业就是有经营异常的。所以我是把异常的记录数量和“移除经营异常的记录”的数量作比较，看哪边大，从而判断这个企业是否有异常。</p><h2 id="结果是什么"><a href="#结果是什么" class="headerlink" title="结果是什么"></a>结果是什么</h2><p><img src="http://static.zybuluo.com/chenSJ/ugz2gco5o6gl65dnem4sxiga/2018-04-05_224002.jpg" alt="2018-04-05_224002.jpg-1230kB"></p><p>生成gov+日期.txt文件，和 日期.ok文件，再上传回服务器。</p><h2 id="断点爬取"><a href="#断点爬取" class="headerlink" title="断点爬取"></a>断点爬取</h2><p>初期的方案是，把已经查出来的公司结果文件和待查询的文件比对，看哪些公司没有查到，如果没有查到，说明是上次没有抓完的，这种方式太过low了，现在方案是用redis缓存起来。</p><h2 id="代理问题"><a href="#代理问题" class="headerlink" title="代理问题"></a>代理问题</h2><p>由于当时需求是不要用代理，银行用那玩意不安全，找出对方网站的反爬虫方案来，我的研究结果是开五个线程把停顿的延迟变为1秒即可，但有的时候会不生效。也许是看对方的心情吧。现在方案是data5u这类网上的爬虫ip提供商来去爬取。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 写一下设计的思路&lt;br&gt;
    
    </summary>
    
      <category term="爬虫" scheme="http://yoursite.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/08/hello-world/"/>
    <id>http://yoursite.com/2018/03/08/hello-world/</id>
    <published>2018-03-07T16:43:46.999Z</published>
    <updated>2017-11-25T18:05:06.555Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js实现单元格合并</title>
    <link href="http://yoursite.com/2018/01/09/js%E5%AE%9E%E7%8E%B0%E5%8D%95%E5%85%83%E6%A0%BC%E5%90%88%E5%B9%B6/"/>
    <id>http://yoursite.com/2018/01/09/js实现单元格合并/</id>
    <published>2018-01-09T00:55:29.000Z</published>
    <updated>2018-03-29T16:00:42.647Z</updated>
    
    <content type="html"><![CDATA[<p> js实现单元格合并<br><a id="more"></a></p><h1 id="js实现单元格合并"><a href="#js实现单元格合并" class="headerlink" title="js实现单元格合并"></a>js实现单元格合并</h1><p>标签（空格分隔）： js 单元格 合并</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">var seq = 1;</span><br><span class="line">var trs = $(&quot;.dataGrid tr&quot;);</span><br><span class="line">var j = 1;</span><br><span class="line">for (var i = 0; i &lt; trs.length - 1; i++) &#123;</span><br><span class="line">    var tds = trs[j].cells;</span><br><span class="line">    var back = trs[i + 1].cells;</span><br><span class="line">    if (i == 0) &#123;</span><br><span class="line">        tds[0].innerHTML = seq;</span><br><span class="line">        seq++;</span><br><span class="line">        continue;</span><br><span class="line">    &#125;</span><br><span class="line">    if (tds[1].innerHTML == back[1].innerHTML) &#123;</span><br><span class="line"></span><br><span class="line">//合并车牌号一列</span><br><span class="line">        trs[i + 1].removeChild(trs[i + 1].cells[0]);</span><br><span class="line">        tds[0].rowSpan = (tds[0].rowSpan | 0) + 1;</span><br><span class="line">// tds[0].innerHTML=seq;</span><br><span class="line">//1次移除</span><br><span class="line">        trs[i + 1].removeChild(trs[i + 1].cells[0]);</span><br><span class="line">        tds[1].rowSpan = (tds[1].rowSpan | 0) + 1;</span><br><span class="line"></span><br><span class="line">//2次移除   cells[]索引的值是tds里的索引减去移除的次数</span><br><span class="line">        trs[i + 1].removeChild(trs[i + 1].cells[0]);</span><br><span class="line">        tds[2].rowSpan = (tds[2].rowSpan | 0) + 1;</span><br><span class="line"></span><br><span class="line">        trs[i + 1].removeChild(trs[i + 1].cells[0]);</span><br><span class="line">        tds[3].rowSpan = (tds[3].rowSpan | 0) + 1;</span><br><span class="line"></span><br><span class="line">        trs[i + 1].removeChild(trs[i + 1].cells[0]);</span><br><span class="line">        tds[4].rowSpan = (tds[4].rowSpan | 0) + 1;</span><br><span class="line"></span><br><span class="line">        trs[i + 1].removeChild(trs[i + 1].cells[0]);</span><br><span class="line">        tds[5].rowSpan = (tds[5].rowSpan | 0) + 1;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        back[0].innerHTML = ++seq;</span><br><span class="line">        j = i + 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; js实现单元格合并&lt;br&gt;
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
  </entry>
  
  <entry>
    <title>java 保留两位小数的方法</title>
    <link href="http://yoursite.com/2018/01/07/java%E4%BF%9D%E7%95%99%E4%B8%A4%E4%BD%8D%E5%B0%8F%E6%95%B0/"/>
    <id>http://yoursite.com/2018/01/07/java保留两位小数/</id>
    <published>2018-01-07T00:55:29.000Z</published>
    <updated>2018-04-05T17:34:43.028Z</updated>
    
    <content type="html"><![CDATA[<p> java 保留两位小数的方法<br><a id="more"></a></p><h1 id="java-保留两位小数的方法"><a href="#java-保留两位小数的方法" class="headerlink" title="java 保留两位小数的方法"></a>java 保留两位小数的方法</h1><p>标签（空格分隔）： java 货币计算</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public void m1() &#123;</span><br><span class="line">7 BigDecimal bg = new BigDecimal(f);</span><br><span class="line">8 double f1 = bg.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue();</span><br><span class="line">9 System.out.println(f1);</span><br><span class="line">10 &#125;</span><br><span class="line"></span><br><span class="line">11 /**</span><br><span class="line">12 * DecimalFormat转换最简便  普通的四舍五入用这个方法，如果用不同的四舍五入，那么用上面的那一种</span><br><span class="line">13 */</span><br><span class="line">14 public void m2() &#123;</span><br><span class="line">15 DecimalFormat df = new DecimalFormat(&quot;#.00&quot;);//最好方法也许是0.00因为#.00在格式化0.31414会变成.31,如果是两位以内的小数则//可有用0.##,如果需要,号那么可以这样使用#,##0.00，</span><br><span class="line">//#号的规则是如果相应位置上没有这个数，并且往后看，或往前看都是0的话，那么也为空。0号的规则是相////应位置上有数话就按照那个数，没有的话就是0，它保证了位数</span><br><span class="line">16 System.out.println(df.format(f));</span><br><span class="line">17 &#125;</span><br><span class="line">18 /**</span><br><span class="line">19 * String.format打印最简便</span><br><span class="line">20 */</span><br><span class="line">21 public void m3() &#123;</span><br><span class="line">22 System.out.println(String.format(&quot;%.2f&quot;, f));</span><br><span class="line">23 &#125;</span><br><span class="line">24 public void m4() &#123;</span><br><span class="line">25 NumberFormat nf = NumberFormat.getNumberInstance();</span><br><span class="line">26 nf.setMaximumFractionDigits(2);</span><br><span class="line">27 System.out.println(nf.format(f));</span><br><span class="line">28 &#125;</span><br></pre></td></tr></table></figure><h2 id="相关参考："><a href="#相关参考：" class="headerlink" title="相关参考："></a>相关参考：</h2><p>ROUND_HALF_UP: 遇到.5的情况时往上近似,例: 1.5 -&gt;;2<br>ROUND_HALF_DOWN : 遇到.5的情况时往下近似,例: 1.5 -&gt;;1<br>BigDecimal a = new BigDecimal(1.5);<br>                System.out.println(“down=”+a.setScale(0,BigDecimal.ROUND_HALF_DOWN)+”/tup=”+a.setScale(0,BigDecimal.ROUND_HALF_UP));<br>结果:down=1  up=2<br>看这个例子就明白了!<br>其他参数说明</p><h3 id="ROUND-CEILING"><a href="#ROUND-CEILING" class="headerlink" title="ROUND_CEILING"></a>ROUND_CEILING</h3><p>  如果   BigDecimal   是正的，则做   ROUND_UP   操作；如果为负，则做   ROUND_DOWN   操作。</p><h3 id="ROUND-DOWN"><a href="#ROUND-DOWN" class="headerlink" title="ROUND_DOWN"></a>ROUND_DOWN</h3><p>  从不在舍弃(即截断)的小数之前增加数字。<br>  ROUND_FLOOR<br>  如果   BigDecimal   为正，则作   ROUND_UP   ；如果为负，则作   ROUND_DOWN   。    </p><h3 id="ROUND-HALF-DOWN"><a href="#ROUND-HALF-DOWN" class="headerlink" title="ROUND_HALF_DOWN"></a>ROUND_HALF_DOWN</h3><p>  若舍弃部分&gt;   .5，则作   ROUND_UP；否则，作   ROUND_DOWN   。    </p><h3 id="ROUND-HALF-EVEN"><a href="#ROUND-HALF-EVEN" class="headerlink" title="ROUND_HALF_EVEN"></a>ROUND_HALF_EVEN</h3><p>  如果舍弃部分左边的数字为奇数，则作   ROUND_HALF_UP   ；如果它为偶数，则作   ROUND_HALF_DOWN   。    </p><h3 id="ROUND-HALF-UP"><a href="#ROUND-HALF-UP" class="headerlink" title="ROUND_HALF_UP"></a>ROUND_HALF_UP</h3><p>  若舍弃部分&gt;=.5，则作   ROUND_UP   ；否则，作   ROUND_DOWN   。    </p><h3 id="ROUND-UNNECESSARY"><a href="#ROUND-UNNECESSARY" class="headerlink" title="ROUND_UNNECESSARY"></a>ROUND_UNNECESSARY</h3><p>  该“伪舍入模式”实际是指明所要求的操作必须是精确的，，因此不需要舍入操作。    </p><h3 id="ROUND-UP"><a href="#ROUND-UP" class="headerlink" title="ROUND_UP"></a>ROUND_UP</h3><p>  总是在非   0   舍弃小数(即截断)之前增加数字。     </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; java 保留两位小数的方法&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>docker常用命令</title>
    <link href="http://yoursite.com/2017/11/07/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/11/07/docker常用命令/</id>
    <published>2017-11-07T00:55:29.000Z</published>
    <updated>2018-03-21T14:25:24.172Z</updated>
    
    <content type="html"><![CDATA[<p> docker常用命令<br><a id="more"></a><br><strong>docker常用的命令</strong><br>docker run -p 8080:8080 –name myxiaoshuo –link mysqldb:mysqldb chen/myxiaoshuo<br>docker build -t chen/myxiaoshuo .<br>docker run -p 8080:8080 –name mycentos –link mysqldb:mysqldb chen/mycentos java -jar myxiaoshuo.jar<br>docker run -p 8080:8080 –name myxiaoshuo –link mysqldb:mysqldb chen/myxiaoshuo java -jar myxiaoshuo.jar<br>docker run –name mysqldb  -v /mysqldb:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=070014  -p 3306:3306 -d mysql<br>docker save -o myxiaoshuo.tar chen/myxiaoshuo<br>sudo docker load &lt; myxiaoshuo.tar<br>sudo docker save -o myxiaoshuo.tar chen/myxiaoshuo<br>docker run -d -p 49160:22 -p 1521:1521 wnameless/oracle-xe-11g<br>docker run –name mysqldb  -v D:/docker/mysqldbxiaoshuo:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123  -p 3306:3306 -d mysql</p><p>docker run –name mysqldb -p 3306:3306 -v D:\docker\mysqldbfile:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123 -d mysql<br>docker run –name mysqldb -p 3306:3306 -v D:\docker\mysqldbfile:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123 -d mysql –lower_case_table_names=1<br>docker run –rm -v D:/dockerdata:/data alpine ls /data<br>docker run -p 6379:6379 -v D:\docker\redisdb:/data  -d –name redisdb redis redis-server –appendonly yes<br>docker run -d -p 27017:27017 -v D:/docker/mongo:/data/db  –name mongodb mongo –auth<br>db.createUser({ user: ‘chensj’, pwd: ‘123’, roles: [ { role: “userAdminAnyDatabase”, db: “admin” } ] });<br>Successfully added user: {<br>    “user” : “chensj”,<br>    “roles” : [<br>        {<br>            “role” : “userAdminAnyDatabase”,<br>            “db” : “admin”<br>        }<br>    ]<br>}</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; docker常用命令&lt;br&gt;
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
  </entry>
  
  <entry>
    <title>奇牙爬虫介绍</title>
    <link href="http://yoursite.com/2017/11/01/%E5%A5%87%E7%89%99%E7%88%AC%E8%99%AB/"/>
    <id>http://yoursite.com/2017/11/01/奇牙爬虫/</id>
    <published>2017-11-01T09:48:33.000Z</published>
    <updated>2018-04-03T10:37:06.322Z</updated>
    
    <content type="html"><![CDATA[<p> <em>*奇伢爬虫使用介绍</em><br><a id="more"></a></p><hr><h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a><strong>导航</strong></h2><hr><ol><li><a href="https://github.com/qiyaTech/javaCrawling#一.简介" target="_blank" rel="noopener">简介</a> </li><li><a href="https://github.com/qiyaTech/javaCrawling#运行项目" target="_blank" rel="noopener">运行项目</a></li></ol><ul><li><a href="https://github.com/qiyaTech/javaCrawling#运行环境" target="_blank" rel="noopener">运行环境</a></li><li><a href="https://github.com/qiyaTech/javaCrawling#运行必备配置" target="_blank" rel="noopener">运行必备配置</a><img src="http://static.zybuluo.com/chenSJ/2oqwd0y5sxz75jagmq0w3p4n/README.md" alt="README.md-3.3kB"></li><li><a href="https://github.com/qiyaTech/javaCrawling#项目运行" target="_blank" rel="noopener">项目运行</a></li><li><a href="https://github.com/qiyaTech/javaCrawling#运行效果及爬取操作" target="_blank" rel="noopener">运行效果及爬取操作</a></li></ul><ol><li><a href="https://github.com/qiyaTech/javaCrawling#爬取网站文章操作手册" target="_blank" rel="noopener">爬取网站文章操作手册</a></li><li><a href="https://github.com/qiyaTech/javaCrawling#爬取文章配置手册" target="_blank" rel="noopener">爬取文章配置手册</a></li></ol><ul><li><a href="https://github.com/qiyaTech/javaCrawling#微信公众号爬取配置" target="_blank" rel="noopener">微信公众号爬取配置</a></li><li><a href="https://github.com/qiyaTech/javaCrawling#普通网站爬取配置" target="_blank" rel="noopener">普通网站爬取配置</a></li></ul><ol><li><a href="https://github.com/qiyaTech/javaCrawling#爬取效果展现" target="_blank" rel="noopener">爬取效果展现</a></li></ol><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.<strong>简介</strong></h2><hr><p><a href="https://github.com/qiyaTech/javaCrawling" target="_blank" rel="noopener">奇伢爬虫</a>基于spring boot 、 WebMagic 实现 微信公众号文章、新闻、csdn、info等网站文章爬取，可以动态设置文章爬取规则、清洗规则，基本实现了爬取大部分网站的文章。</p><h4 id="奇伢爬虫技术讨论群：365155351，大家可以加群一起来讨论哦～）"><a href="#奇伢爬虫技术讨论群：365155351，大家可以加群一起来讨论哦～）" class="headerlink" title="(奇伢爬虫技术讨论群：365155351，大家可以加群一起来讨论哦～）"></a><strong>(奇伢爬虫技术讨论群：365155351，大家可以加群一起来讨论哦～）</strong></h4><h2 id="二-运行项目"><a href="#二-运行项目" class="headerlink" title="二.运行项目"></a>二.<strong>运行项目</strong></h2><hr><p>### </p><h3 id="1-运行环境"><a href="#1-运行环境" class="headerlink" title="1.运行环境"></a>1.<strong>运行环境</strong></h3><p>项目开发环境：IntelliJ IDEA 15 , <strong>JDK 1.8</strong></p><h3 id="2-运行必备配置"><a href="#2-运行必备配置" class="headerlink" title="2.运行必备配置"></a>2.<strong>运行必备配置</strong></h3><h4 id="2-1-数据库配置"><a href="#2-1-数据库配置" class="headerlink" title="2.1.数据库配置"></a>2.1.<strong>数据库配置</strong></h4><ul><li>先创建数据库，然后修改配置文件<a href="https://github.com/qiyaTech/javaCrawling/blob/master/boss/src/main/resources/application-dev.properties" target="_blank" rel="noopener">application-dev.properties</a>的如下属性:</li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* ```spring.datasource.username = 数据库用户名</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 2.2.**数据导入**</span><br><span class="line">我们提供了一些基础数据供大家测试，在新建的数据库中执行文件[db_sql.txt](https://github.com/qiyaTech/javaCrawling/blob/master/boss/src/main/resources/data/db_sql.txt)中的sql，就可以将一些必备的表及数据导入数据库了。</span><br><span class="line"></span><br><span class="line">#### 2.3.**redis 配置**</span><br><span class="line">* 项目中用到 redis 对一些数据的存储, 如果之前没有安装过 redis, 需要先安装 redis ,然后修改配置文件 [application-dev.properties](https://github.com/qiyaTech/javaCrawling/blob/master/boss/src/main/resources/application-dev.properties)的如下属性:</span><br><span class="line">* ```spring.redis.host = redis ip 地址</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* ```spring.redis.port = redis 端口</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-七牛云存储配置"><a href="#2-4-七牛云存储配置" class="headerlink" title="2.4.七牛云存储配置"></a>2.4.<strong>七牛云存储配置</strong></h4><ul><li><p>注册七牛云账号，登录后在控制台新建“存储空间“，（保存存储空间的名称，配置会用到），并在“个人中心——密钥管理“中查看 ak 与 sk。</p></li><li><p>修改配置文件 <a href="https://github.com/qiyaTech/javaCrawling/blob/master/boss/src/main/resources/application-dev.properties" target="_blank" rel="noopener">application-dev.properties</a>的如下属性:</p></li><li><code>qiniu.bucket = 七牛存储空间名称</code></li><li><code>qiniu.accessKey = 七牛 ak</code></li><li><code>qiniu.secretKey = 七牛 sk</code></li><li><code>qiniu.http.context = 七牛外链域名</code></li></ul><h3 id="3-项目运行"><a href="#3-项目运行" class="headerlink" title="3.项目运行"></a>3.<strong>项目运行</strong></h3><ul><li><p>完成了<a href="https://github.com/qiyaTech/javaCrawling#运行必备配置" target="_blank" rel="noopener">运行必备配置</a>就可以运行项目了<strong>（注：上述配置步骤缺一不可哦～～）</strong></p></li><li><p>启动项目只需要运行java文件<a href="https://github.com/qiyaTech/javaCrawling/blob/master/boss/src/main/java/com/qiya/boss/BossApplication.java" target="_blank" rel="noopener">BossApplication.java</a>就可以了。</p></li><li><p>项目成功启动后，访问 <a href="http://localhost:8015" target="_blank" rel="noopener">http://localhost:8015</a> 进入爬虫管理平台。</p></li><li><p>平台登录用户名：admin</p></li><li><p>平台登录密码：admin</p></li></ul><h3 id="4-运行效果及爬取操作"><a href="#4-运行效果及爬取操作" class="headerlink" title="4.运行效果及爬取操作"></a>4.<strong>运行效果及爬取操作</strong></h3><ul><li>成功登录爬虫管理平台后的界面<em>（当你看到这个界面时就说明你已成功启动项目了～～）</em>：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/pachong_show.png" alt="爬虫管理平台界面"></p><ul><li><strong>爬取操作：</strong></li></ul><p>项目已经运行起来了，现在我们就来看一下怎么爬取一个网站的文章吧。（现在你打开的爬取平台上已经有了我们做好的一些爬取任务配置，只需要按照下面的步骤操作就可以爬取到很多文章了～接下来想自己试着爬取某网站文章可参照<a href="https://github.com/qiyaTech/javaCrawling#爬取网站文章操作手册" target="_blank" rel="noopener">爬取网站文章操作手册</a>。</p><ul><li>(1).请点击界面上左侧菜单：“爬虫管理“——“任务监控管理“，可以看到有一些我们配置好的爬取任务,下图是“任务监控管理“界面，以及对个别参数进行了说明：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/paqu.png" alt="任务监控界面"></p><ul><li><p>(2).<strong>执行爬取任务：</strong>接下来我们点击“运行“按钮，这时你可以去查看下控制台，控制台中有输出爬取文章的日志。</p></li><li><p>(3).<strong>查看爬取的文章</strong>：我们将爬取到的文章进行解析后保存到了数据库中。</p></li><li><p>你可以在表 “<strong>article</strong>“ 中查看到爬取文章的相关属性：文章标题、作者、列表图片url、发布时间、点赞数、浏览数等等。</p></li><li><p>在表 “<strong>article_detail</strong>“ 中可以查看到爬取文章的内容。</p></li><li><p>(4).<strong>清洗爬取的文章：</strong>清洗，即是对所爬文章的样式的调整。具体操作如下：</p></li><li>点击你刚爬取任务对应的“清洗“按钮，会出现如下界面：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/qingxi.png" alt="清洗文章界面"></p><ul><li><p>这个清洗界面中会显示出你爬取的文章，你可以针对个别文章进行清洗，也可以一次性选中多条，或全部清洗。</p></li><li><p>清洗完成后你可以在 “article_detail“ 中找到对应的文章内容，看下与之前对比是不是样式有了一些变化呢～</p></li></ul><p><em>（到这里，整个爬取文章以及清洗的操作就完成了。）</em></p><h2 id="三-爬取网站文章操作手册"><a href="#三-爬取网站文章操作手册" class="headerlink" title="三.爬取网站文章操作手册"></a>三.<strong>爬取网站文章操作手册</strong></h2><hr><p>这里主要向大家介绍爬取一个网站文章的具体配置操作：</p><ul><li><p>1.<strong>添加站点：</strong></p></li><li><p>站点即是各个网站或公众号。爬取网站文章首先要添加一个站点，下图是站点管理界面：</p></li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/site_show.png" alt="站点管理"></p><ul><li>添加站点界面如下图，添加站点是爬取文章的第一步。</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/add_site.png" alt="添加站点"></p><ul><li><p>2.<strong>添加爬取任务：</strong></p></li><li><p>任务是对每个站点爬取任务进行管理的，我们每个站点可以有多个爬取任务，这里我们主要针对两种情况进行爬取（<strong>具体爬取的任务配置在<a href="https://github.com/qiyaTech/javaCrawling#爬取文章的配置手册" target="_blank" rel="noopener">爬取文章的配置手册</a>中有详细说明</strong>）：</p></li></ul><ol><li>对网站或公众号每日更新文章进行爬取；</li><li>对网站或公众号历史文章进行爬取。</li></ol><ul><li>任务管理界面如下：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/task_show.png" alt="任务管理界面"></p><ul><li>添加任务：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/add_task.png" alt="添加任务界面"></p><p>添加任务时，大家要注意两个字段哦：</p><ol><li><p><strong>是否需要手动执行：</strong><br>如果选择需要手动执行，则每次重启完项目后需要手动点击 <strong>“任务监控管理“</strong> 界面中对应任务的启动按钮哦～ 否则每次重启完项目后系统中会自动启动爬取任务的。</p></li><li><p><strong>是否定时执行：</strong><br>如果选择定时执行，则在任务启动后系统中每天会有两个时间点定时去爬取文章，否则会一直爬取哦～（在爬取一定时间后线程会休眠一段时间，再继续爬取的）</p></li></ol><p>添加任务最重要的是任务规则配置，详见<a href="https://github.com/qiyaTech/javaCrawling#爬取文章的配置手册" target="_blank" rel="noopener">爬取文章配置手册</a>。</p><p><em>（添加完任务后就可以执行爬取任务了，爬取任务的操作我们上面已经讲过了哦～）</em></p><h2 id="四-爬取文章配置手册"><a href="#四-爬取文章配置手册" class="headerlink" title="四.爬取文章配置手册"></a>四.<strong>爬取文章配置手册</strong></h2><hr><h3 id="网站爬取任务规则配置"><a href="#网站爬取任务规则配置" class="headerlink" title="网站爬取任务规则配置"></a><strong>网站爬取任务规则配置</strong></h3><h4 id="1-任务规则配置参数介绍："><a href="#1-任务规则配置参数介绍：" class="headerlink" title="1.任务规则配置参数介绍："></a>1.<strong>任务规则配置参数介绍：</strong></h4><ul><li><strong>任务规则配置参数</strong>如下图：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/rule.png" alt="任务规则"></p><ul><li><strong>参数说明：</strong></li><li>spider : 爬虫配置信息；        </li><li>site : 站点信息； </li><li>condition：历史文章爬取条件（只限于历史爬取使用，爬取更新可去掉此参数）；</li><li>rule : 爬取内容的规则配置；  </li><li>wechat: 爬取内容的规则配置；    </li><li>rinseRules : 清理数据配置；  </li><li>isCircle : 是否需要循环爬取（主要用于爬取更新，值为：true / false）；</li><li>circleInterval   循环间隔时间单位（秒）。</li></ul><h4 id="任务规则参数详细配置："><a href="#任务规则参数详细配置：" class="headerlink" title="任务规则参数详细配置："></a><strong>任务规则参数详细配置：</strong></h4><h5 id="1-spider-爬虫配置："><a href="#1-spider-爬虫配置：" class="headerlink" title="(1).spider 爬虫配置："></a>(1).<strong>spider 爬虫配置：</strong></h5><ul><li><strong>参数说明：</strong></li><li>thread : 线程数；</li><li><p>startUrl：开始爬取页面url，以infoQ网站为列，我们爬取新闻列表，开始地址为下图所示：</p></li><li><p>downloader：下载器设置，普通网站一般设为空值；<br>weChatDownloader ：微信爬取专用。微信爬取网址必须设置参数。<br>dynamicProxyHttpClientDownloader：支持动态代理ip，Downloader。在没有设置下载器，动态动态代理参数 （dynamicProxy）为true时 会自动设置本下载器。设参数置参考site 站点配置：</p></li><li><strong>processer：处理器</strong></li><li><strong>项目中处理器主要有以下处理器：</strong></li></ul><ol><li><strong>weChatUpdatePageProcess</strong>：微信爬取更新专用；<br>需设置下载器weChatDownloader<br><strong>微信公众号更新爬取示例：</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```&quot;spider&quot;: &#123;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><figcaption><span>1,```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``` &quot;startUrl&quot;: &quot;http://weixin.sogou.com/weixin?type=1&amp;s_from=input&amp;query=oschina2013&amp;ie=utf8&amp;_sug_=n&amp;_sug_type_=&quot;,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>"weChatDownloader",```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```&quot;processer&quot;: &quot;weChatUpdatePageProcess&quot;,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>13,```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```&quot;pipeline&quot;: [&quot;exceptionPipeline&quot;,&quot;rinseCommPipeline&quot;,&quot;rinseWeChatPipeline&quot;,&quot;mySqlArticlePipeline&quot;]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``` &quot;site&quot;: &#123;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>"mp.weixin.qq.com",```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```&quot;proxy&quot;: [],</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>3,```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```&quot;sleepTime&quot;: 5000,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>[],```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```&quot;userAgent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.110 Safari/537.36&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```&quot;condition&quot;: &#123;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>"",```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``` &quot;startTime&quot;: &quot;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br></pre></td><td class="code"><pre><span class="line">`&quot;wechat&quot;: &#123;`</span><br><span class="line">`&quot;name&quot;: &quot;oschina2013&quot;,`</span><br><span class="line">`&quot;uid&quot;: &quot;oschina2013&quot;,`</span><br><span class="line">`&quot;url&quot;: &quot;http://weixin.sogou.com/weixin?type=1&amp;s_from=input&amp;query=oschina2013&amp;ie=utf8&amp;_sug_=n&amp;_sug_type_=&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">`&quot;rule&quot;: &#123;`</span><br><span class="line">`&quot;detailregex&quot;: &quot;http://mp\\.weixin\\.qq\\.com/s?\\S+&quot;,`</span><br><span class="line">`&quot;listregex&quot;: &quot;http://mp.weixin.qq.com/profile?src&quot;,`</span><br><span class="line">`&quot;loadlistxpath&quot;:&quot;//*[@id=&apos;main&apos;]/div[4]/ul/li[1]/div/div[2]/p[1]&quot;,`</span><br><span class="line">`&quot;listxpath&quot;: &quot;&quot;,`</span><br><span class="line">`&quot;detailxpath&quot;: [`</span><br><span class="line">` &#123;`</span><br><span class="line">`&quot;name&quot;: &quot;title&quot;,`</span><br><span class="line">`&quot;reg&quot;: &quot;&quot;,`</span><br><span class="line">`&quot;value&quot;: &quot;//*[@id=&apos;activity-name&apos;]\/text()&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">` &quot;reg&quot;: &quot;&quot;,`</span><br><span class="line">`&quot;value&quot;: &quot;//*[@id=&apos;post-date&apos;]\/text()&quot;,`</span><br><span class="line">`&quot;name&quot;: &quot;publicTime&quot;,`</span><br><span class="line">`&quot;simpleDateFormat&quot;: &quot;yyyy-MM-dd&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">` &quot;name&quot;: &quot;author&quot;,`</span><br><span class="line">` &quot;reg&quot;: &quot;&quot;,`</span><br><span class="line">`&quot;value&quot;: &quot;//*[@id=&apos;post-user&apos;]\/text()&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">`&#123;`</span><br><span class="line">`&quot;name&quot;: &quot;beforeContent&quot;,`</span><br><span class="line">` &quot;reg&quot;: &quot;&quot;,`</span><br><span class="line">` &quot;value&quot;: &quot;//*[@id=&apos;js_content&apos;]&quot;`</span><br><span class="line">`&#125;`</span><br><span class="line">`]`</span><br><span class="line">` &#125;,`</span><br><span class="line">`&quot;isCircle&quot;: true,`</span><br><span class="line">`&quot;circleInterval&quot;:10800,`</span><br><span class="line">`&quot;rinseRules&quot;:[`</span><br><span class="line">`&#123;`</span><br><span class="line">` &quot;action&quot;: &quot;add&quot;,`</span><br><span class="line">` &quot;type&quot;:&quot;attr&quot;,`</span><br><span class="line">`  &quot;cssquery&quot;: &quot;img&quot;,`</span><br><span class="line">` &quot;name&quot;: &quot;width&quot;,`</span><br><span class="line">` &quot;vluae&quot;: &quot; 100%&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">` &quot;action&quot;: &quot;add&quot;,`</span><br><span class="line">` &quot;type&quot;:&quot;attr&quot;,`</span><br><span class="line">`  &quot;cssquery&quot;: &quot;img&quot;,`</span><br><span class="line">`  &quot;name&quot;: &quot;height&quot;,`</span><br><span class="line">`&quot;vluae&quot;: &quot;auto&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">` &quot;action&quot;: &quot;replace&quot;,`</span><br><span class="line">`   &quot;type&quot;:&quot;attr&quot;,`</span><br><span class="line">`  &quot;cssquery&quot;: &quot;img&quot;,`</span><br><span class="line">` &quot;name&quot;: &quot;style&quot;,`</span><br><span class="line">` &quot;source&quot;: &quot;width: \\d+[.\\d+]px&quot;,`</span><br><span class="line">` &quot;target&quot;: &quot;width: 100%&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">`&quot;action&quot;: &quot;replace&quot;,`</span><br><span class="line">` &quot;type&quot;:&quot;attr&quot;,`</span><br><span class="line">` &quot;cssquery&quot;: &quot;img&quot;,`</span><br><span class="line">`  &quot;name&quot;: &quot;style&quot;,`</span><br><span class="line">`   &quot;source&quot;: &quot;width: auto&quot;,`</span><br><span class="line">` &quot;target&quot;: &quot;width: 100%&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">`  &quot;action&quot;: &quot;copy&quot;,`</span><br><span class="line">` &quot;type&quot;:&quot;attr&quot;,`</span><br><span class="line">`  &quot;cssquery&quot;: &quot;.video_iframe&quot;,`</span><br><span class="line">` &quot;source&quot;: &quot;data-src&quot;,`</span><br><span class="line">`&quot;target&quot;: &quot;src&quot;`</span><br><span class="line">` &#125;`</span><br><span class="line">`]`</span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">2.  **weChatHistoryPageProcess**：微信爬取历史专用；</span><br><span class="line">需设置下载器weChatDownloader</span><br><span class="line">**微信公众号历史爬取示例:**</span><br><span class="line">`&#123;`</span><br><span class="line">`&quot;spider&quot;: &#123;`</span><br><span class="line">`&quot;thread&quot;: 1,`</span><br><span class="line">`&quot;startUrl&quot;: &quot;https://mp.weixin.qq.com/mp/profile_ext?action=getmsg&amp;__biz=MjM5NzM0MjcyMQ==&amp;f=json&amp;frommsgid=&amp;count=10&amp;scene=124&amp;is_ok=1&amp;uin=777&amp;key=777&amp;pass_ticket=QRnKzE8eCui1gEzcgTzGlMMUSP9d7DzbTGtoQOU1OCKoI9yMgM1eTn2dNoBQlv0K&amp;wxtoken=&amp;x5=1&amp;f=json&quot;,`</span><br><span class="line">`&quot;downloader&quot;: &quot;weChatDownloader&quot;,`</span><br><span class="line">`&quot;processer&quot;: &quot;weChatHistoryPageProcess&quot;,`</span><br><span class="line">`&quot;siteid&quot;: 13,`</span><br><span class="line">` &quot;pipeline&quot;: [&quot;rinseCommPipeline&quot;,&quot;rinseWeChatPipeline&quot;,&quot;mySqlArticlePipeline&quot;]`</span><br><span class="line">` &#125;,`</span><br><span class="line">`&quot;site&quot;: &#123;`</span><br><span class="line">`&quot;domain&quot;: &quot;mp.weixin.qq.com&quot;,`</span><br><span class="line">` &quot;proxy&quot;: [],`</span><br><span class="line">` &quot;retry&quot;: 3,`</span><br><span class="line">` &quot;sleepTime&quot;: 3000,`</span><br><span class="line">` &quot;headers&quot;: [`</span><br><span class="line">` &#123;`</span><br><span class="line">` &quot;name&quot;: &quot;Cookie&quot;,`</span><br><span class="line">`&quot;value&quot;: &quot;news_commid=oDOGxv_sCQKLRbPUnpFOlBxc12sk; wxtokenkey=3af5afc4ad6dc8d50ddb4155017fee8169c40528ecbaedb532c0e00323feea4d; wxticket=898662085; wxticketkey=28a040f7ad3354057a1de315330438a969c40528ecbaedb532c0e00323feea4d; wap_sid=CIDixZ0HEkBiWmtxZTF6QkpTazIzWk1sbUhINUFUek9kM1NBOTFrUE9hOGJId19aeVJOYUlxQy1lMTdXcWxYNmxZR1FuSUYtGAQgpBQogZiS9wgwiYGZxwU=; wap_sid2=CIDixZ0HElxvMXNia1Z0Q1ZrTHNfYWdiODlFVWRlUTJ0cS1qU0U5YUlrbmFLX1h6bDN3WFJDUW5RaG14TVNTc0xUb1hLNEszNHB2UHgxQUt6SEFpcDFKaFpyVDh5b01EQUFBfjCJgZnHBQ==&quot;`</span><br><span class="line">`&#125;`</span><br><span class="line">` ],`</span><br><span class="line">`&quot;userAgent&quot;: &quot;Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">` &quot;condition&quot;: &#123;`</span><br><span class="line">` &quot;startTime&quot;:&quot;&quot;,`</span><br><span class="line">` &quot;endTime&quot;:&quot;&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &quot;wechat&quot;: &#123;`</span><br><span class="line">` &quot;name&quot;: &quot;&quot;,`</span><br><span class="line">` &quot;uid&quot;: &quot;&quot;,`</span><br><span class="line">` &quot;url&quot;: &quot;https://mp.weixin.qq.com/mp/profile_ext?action=getmsg&amp;__biz=MjM5NzM0MjcyMQ==&amp;f=json&amp;frommsgid=[MESSAGEID]&amp;count=10&amp;scene=124&amp;is_ok=1&amp;uin=777&amp;key=777&amp;pass_ticket=QRnKzE8eCui1gEzcgTzGlMMUSP9d7DzbTGtoQOU1OCKoI9yMgM1eTn2dNoBQlv0K&amp;wxtoken=&amp;x5=1&amp;f=json&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &quot;rule&quot;: &#123;  //同上例子配置  &#125;,`</span><br><span class="line">`&quot;isCircle&quot;: false,`</span><br><span class="line">`&quot;rinseRules&quot;:[   // 同上例子配置 ]`</span><br><span class="line">` &#125;`</span><br><span class="line"></span><br><span class="line">3. **XPathWebPageProcess**：普通网站爬取使用（包括下一页地址页面上有的历史爬取）。</span><br><span class="line">**普通网站爬取示例：**</span><br><span class="line">`&#123;`</span><br><span class="line">`&quot;spider&quot; : &#123;`</span><br><span class="line">` &quot;thread&quot; : 1,`</span><br><span class="line">`&quot;startUrl&quot; : &quot;http://www.ceibsreview.com/list/index/classid/128&quot;,`</span><br><span class="line">`&quot;downloader&quot; : &quot;&quot;,`</span><br><span class="line">`&quot;processer&quot; : &quot;XPathWebPageProcess&quot;,`</span><br><span class="line">`&quot;siteid&quot; : &quot;18&quot;,`</span><br><span class="line">`&quot;pipeline&quot; : [`</span><br><span class="line">` &quot;rinseCommPipeline&quot;,`</span><br><span class="line">` &quot;mySqlArticlePipeline&quot;`</span><br><span class="line">`  ]`</span><br><span class="line">`&#125;,`</span><br><span class="line">`&quot;site&quot; : &#123;`</span><br><span class="line">` &quot;domain&quot; : &quot;www.ceibsreview.com&quot;,`</span><br><span class="line">` &quot;retry&quot; : 3,`</span><br><span class="line">` &quot;sleepTime&quot; : 5000,`</span><br><span class="line">` &quot;headers&quot; : [`</span><br><span class="line">`  &#123;`</span><br><span class="line">`  &quot;name&quot; : &quot;Content-Type:&quot;,`</span><br><span class="line">` &quot;value&quot; : &quot;application\/json&quot;`</span><br><span class="line">`   &#125;`</span><br><span class="line">`],`</span><br><span class="line">`&quot;cookies&quot; : [`</span><br><span class="line">` &#123;`</span><br><span class="line">`&quot;name&quot; : &quot;mm_session&quot;,`</span><br><span class="line">`  &quot;value&quot; : &quot;application\/json&quot;`</span><br><span class="line">`  &#125;`</span><br><span class="line">`  ],`</span><br><span class="line">`&quot;userAgent&quot; : &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &quot;rule&quot; : &#123;`</span><br><span class="line">`  &quot;detailregex&quot; : &quot;http://www\\.ceibsreview\\.com/show/index/classid/\\d+/id/\\d+&quot;,`</span><br><span class="line">`&quot;listregex&quot; : &quot;http://www\\.ceibsreview\\.com/list/index/classid/128&quot;,`</span><br><span class="line">` &quot;listxpath&quot; : &quot;//*[@id=&apos;right&apos;]/ul[@class=&apos;lists&apos;]/li/div[1]/a&quot;,`</span><br><span class="line">` &quot;detailxpath&quot; : [`</span><br><span class="line">`  &#123;`</span><br><span class="line">`&quot;name&quot; : &quot;title&quot;,`</span><br><span class="line">` &quot;reg&quot; : &quot;&quot;,`</span><br><span class="line">`  &quot;value&quot; : &quot;//*[@id=&apos;article&apos;]/h3/text()&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">` &quot;reg&quot; : &quot;\\d&#123;4&#125;年\\d+月&quot;,`</span><br><span class="line">` &quot;value&quot; : &quot;//*[@id=&apos;article&apos;]/div[1]/span/text()&quot;,`</span><br><span class="line">` &quot;name&quot; : &quot;publicTime&quot;,`</span><br><span class="line">` &quot;simpleDateFormat&quot; : &quot;yyyy年MM月&quot;`</span><br><span class="line">`  &#125;,`</span><br><span class="line">`  &#123;`</span><br><span class="line">`&quot;name&quot; : &quot;author&quot;,`</span><br><span class="line">` &quot;reg&quot; : &quot;(.*?) &quot;,`</span><br><span class="line">` &quot;value&quot; : &quot;//*[@id=&apos;article&apos;]/div[1]/text()&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &#123;`</span><br><span class="line">`  &quot;name&quot; : &quot;beforeContent&quot;,`</span><br><span class="line">`  &quot;reg&quot; : &quot;&quot;,`</span><br><span class="line">`  &quot;value&quot; : &quot;//*[@id=&apos;article&apos;]/div[3]&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">`  &#123;`</span><br><span class="line">`&quot;name&quot;:&quot;introduce&quot;,`</span><br><span class="line">`&quot;reg&quot;:&quot;&quot;,`</span><br><span class="line">`&quot;value&quot;:&quot;//div[@class=&apos;detail-box&apos;]/div[@class=&apos;summary&apos;]/text()&quot;`</span><br><span class="line">`  &#125;`</span><br><span class="line">]`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &quot;isCircle&quot; : true,`</span><br><span class="line">`&quot;rinseRules&quot;:[ //同上列子 ]`</span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">4.  **XPathWebMorePageProcess**：普通网站历史爬取使用（使用条件：历史文章列表的地址类似于下一页拼接的形式，如：infoQ: 、csdn: ）；</span><br><span class="line">**普通网址历史爬取示例：**</span><br><span class="line">`&#123;`</span><br><span class="line">`&quot;spider&quot; : &#123;`</span><br><span class="line">` &quot;thread&quot; : 1,`</span><br><span class="line">`&quot;startUrl&quot; : &quot;http://blog.csdn.net/?&amp;page=2&quot;,`</span><br><span class="line">` &quot;downloader&quot; : &quot;&quot;,`</span><br><span class="line">` &quot;processer&quot; : &quot;XPathWebMorePageProcess&quot;,`</span><br><span class="line">` &quot;siteid&quot; : &quot;1&quot;,`</span><br><span class="line">` &quot;pipeline&quot; : [`</span><br><span class="line">` &quot;rinseCommPipeline&quot;,`</span><br><span class="line">` &quot;mySqlArticlePipeline&quot;`</span><br><span class="line">` ]`</span><br><span class="line">` &#125;,`</span><br><span class="line">`&quot;site&quot; : &#123;`</span><br><span class="line">`&quot;domain&quot; : &quot;blog.csdn.net&quot;,`</span><br><span class="line">` &quot;retry&quot; : 3,`</span><br><span class="line">` &quot;sleepTime&quot; : 222,`</span><br><span class="line">`&quot;headers&quot; : [`</span><br><span class="line">` &#123;`</span><br><span class="line">`  &quot;name&quot; : &quot;Content-Type:&quot;,`</span><br><span class="line">` &quot;value&quot; : &quot;application\/json&quot;`</span><br><span class="line">`    &#125;`</span><br><span class="line">` ],`</span><br><span class="line">`  &quot;cookies&quot; : [`</span><br><span class="line">`  &#123;`</span><br><span class="line">` &quot;name&quot; : &quot;mm_session&quot;,`</span><br><span class="line">`  &quot;value&quot; : &quot;application\/json&quot;`</span><br><span class="line">`    &#125;`</span><br><span class="line">`  ],`</span><br><span class="line">`  &quot;userAgent&quot; : &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31&quot;`</span><br><span class="line">` &#125;,`</span><br><span class="line">`&quot;condition&quot; : &#123;`</span><br><span class="line">`  &quot;addPage&quot;:1,`</span><br><span class="line">` &quot;thisPage&quot;:2,`</span><br><span class="line">`&quot;startTime&quot;:&quot;2017-03-01&quot;,`</span><br><span class="line">`&quot;endTime&quot;:&quot;2017-03-30&quot;`</span><br><span class="line">`  &#125;,`</span><br><span class="line">` &quot;rule&quot; : &#123; //同上列子配置 &#125;,`</span><br><span class="line">`  &quot;isCircle&quot; : false,`</span><br><span class="line">` &quot;rinseRules&quot;:[ //同上列子配置 ]`</span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">5.  **XPathWebPageListImageProcess**：如果网站中含有图片列表，需要取图片，需在规则里增加两个元素，一个是列表的xpath，一个是图片的xpath，如果之前有文章详情的xpath，详情的xpath要在列表的xpath路径范围之内。</span><br><span class="line">**图片列表网址爬取示例：**</span><br><span class="line">`&#123;`</span><br><span class="line">`&quot;spider&quot; : &#123;`</span><br><span class="line">` &quot;thread&quot; : 1,`</span><br><span class="line">`  &quot;startUrl&quot; : &quot;http:\/\/www.iresearch.cn&quot;,`</span><br><span class="line">`&quot;downloader&quot; : &quot;&quot;,`</span><br><span class="line">`&quot;processer&quot; : &quot;XPathWebPageListImageProcess&quot;,`</span><br><span class="line">`  &quot;siteid&quot; : &quot;36&quot;,`</span><br><span class="line">`&quot;pipeline&quot; : [`</span><br><span class="line">` &quot;rinseCommPipeline&quot;,`</span><br><span class="line">`&quot;mySqlArticlePipeline&quot;`</span><br><span class="line">` ]`</span><br><span class="line">` &#125;,`</span><br><span class="line">` &quot;site&quot; : &#123;`</span><br><span class="line">`&quot;retry&quot; : 3,`</span><br><span class="line">` &quot;sleepTime&quot; : 5000,`</span><br><span class="line">` &quot;cookies&quot; : [`</span><br><span class="line">` &#123;`</span><br><span class="line">` &quot;name&quot; : &quot;mm_session&quot;,`</span><br><span class="line">` &quot;value&quot; : &quot;application\/json&quot;`</span><br><span class="line">`&#125;`</span><br><span class="line">`],`</span><br><span class="line">`   &quot;headers&quot; : [`</span><br><span class="line">`&#123;`</span><br><span class="line">` &quot;name&quot; : &quot;Content-Type:&quot;,`</span><br><span class="line">` &quot;value&quot; : &quot;application\/json&quot;`</span><br><span class="line">` &#125;`</span><br><span class="line">`],`</span><br><span class="line">`&quot;domain&quot; : &quot;www.iresearch.cn&quot;,`</span><br><span class="line">`&quot;userAgent&quot; : &quot;Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit\/537.31 (KHTML, like Gecko) Chrome\/26.0.1410.65 Safari\/537.31&quot;`</span><br><span class="line">`&#125;,`</span><br><span class="line">` &quot;rule&quot; : &#123;`</span><br><span class="line">`&quot;itemxpath&quot; : &quot;\/\/div[@class=&apos;m-item f-cb z-sort-1&apos;]&quot;,`</span><br><span class="line">` &quot;detailregex&quot; : &quot;http:\/\/news\\.iresearch.cn\/content\/\\d+\/\\d+\/\\d+.shtml&quot;,`</span><br><span class="line">`&quot;listregex&quot; : &quot;http:\/\/www\\.iresearch\\.cn&quot;,`</span><br><span class="line">`&quot;listxpath&quot; : &quot;\/\/div[2]\/h3\/a&quot;,`</span><br><span class="line">` &quot;itemImagexpath&quot; : &quot;\/\/div[@class=&apos;u-img&apos;]\/a\/img\/@src&quot;,`</span><br><span class="line">`&quot;detailxpath&quot; : [],`</span><br><span class="line">` &#125;,`</span><br><span class="line">`&quot;rinseRules&quot; : [],`</span><br><span class="line">`&quot;isCircle&quot; : true`</span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">* siteid：站点Id ,需要在后台管理中新建站点后生成的Id，站点管理页面获取。</span><br><span class="line"></span><br><span class="line">* pipeline：管道设置。值为数组，后台会根据数组中的顺序执行。</span><br><span class="line">项目中现有的管道主要有以下几种：</span><br><span class="line">1.  exceptionPipeline：异常处理pipe；现在微信文章更新爬取需要。 </span><br><span class="line"></span><br><span class="line">2.  rinseCommPipeline：数据清洗pipe (公众号网站必写，可根据参数rinseRules的配置进行清洗)；</span><br><span class="line"></span><br><span class="line">3. rinseWeChatPipeline：微信列表图片修改（公众号爬取必选pipe）；</span><br><span class="line"></span><br><span class="line">4.  mySqlArticlePipeline：数据库保存文章操作（公众号网站必写）。</span><br><span class="line"></span><br><span class="line">5. 网站爬取应用场景示例管道顺序：</span><br><span class="line">**普通网址爬取**：</span><br><span class="line">rinseCommPipeline 、 mySqlArticlePipeline</span><br><span class="line"></span><br><span class="line">**微信公众号历史爬取**：exceptionPipeline 、rinseCommPipeline、rinseWeChatPipeline 、mySqlArticlePipeline</span><br><span class="line"></span><br><span class="line">**微信公众号更新爬取**： rinseCommPipeline、rinseWeChatPipeline 、 mySqlArticlePipeline</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#####  (2).**Site 站点配置：**</span><br><span class="line">* 站点配置如下图：</span><br><span class="line"></span><br><span class="line">![站点配置](http://ot2ajy8ew.bkt.clouddn.com/site_peizhi.png)</span><br><span class="line"></span><br><span class="line">![站点配置](http://ot2ajy8ew.bkt.clouddn.com/site_peizhi1.png)</span><br><span class="line"></span><br><span class="line">* **参数说明：**</span><br><span class="line">* retry：网址爬取失败重试次数</span><br><span class="line">* sleepTime：休眠时间</span><br><span class="line">* cookies：请求Cookie设置，值为数组，一般网站爬取不需要设置。</span><br><span class="line">* headers：请求头设置，一般网站爬取不需要设置。</span><br><span class="line">* domain：网站域名</span><br><span class="line">* userAgent：浏览器标示设置</span><br><span class="line">* dynamicProxy：动态代理设置默认false 设置ture 会启动动态代理ip爬取文章。（可以不填）</span><br><span class="line"></span><br><span class="line">##### (3).**Condition 配置：(目前仅用于爬取历史)**</span><br><span class="line">* condition的配置如下：</span><br><span class="line"></span><br><span class="line">![爬取历史配置](http://ot2ajy8ew.bkt.clouddn.com/condition.png)</span><br><span class="line"></span><br><span class="line">* **参数说明：**</span><br><span class="line">* startTime：爬取的开始时间（公众号和网站爬取历史必用参数）</span><br><span class="line">* endTime：爬取的结束时间（公众号和网站爬取历史必用参数）</span><br><span class="line">* thisPage：个别网站爬取使用参数，与参数addPage 一起使用。</span><br><span class="line"></span><br><span class="line">（注：若用了thisPage 和 addPage 两个参数，则上述参数“sprider”中process配置为：XPathWebMorePageProcess)*</span><br><span class="line"></span><br><span class="line">* **适用场景：**</span><br><span class="line"></span><br><span class="line">当网站加载更多时当前地址后面会增加一个参数，参数值为数字，并且有规律的增加。下一页地址类似于（重点是要有“＝”，并且后面紧跟数字），如：http://blog.csdn.net/?&amp;page=2</span><br><span class="line"></span><br><span class="line">##### (4).**rule规则配置**</span><br><span class="line">* rule规则配置这部分配置是获取页面上的链接或抓取文章内容的字端的规则配置。</span><br><span class="line"></span><br><span class="line">![rule配置](http://ot2ajy8ew.bkt.clouddn.com/rule_prizhi.png)</span><br><span class="line"></span><br><span class="line">* detailregex：文章详细页面url 规则</span><br><span class="line">* listregex：文章列表页面url规则</span><br><span class="line">* loadlistxpath：爬取历史文章专用，用来获取页面上历史文章列表url。</span><br><span class="line"></span><br><span class="line">loadlistxpath 参数适用场景：文章列表页面中有下一页（或加载更多）的地址。用了此参数就不可再用condition 配置中的thisPage 和addPage 两个参数。</span><br><span class="line"></span><br><span class="line">* listxpath：列表页面url</span><br><span class="line">* detailxpath：爬取详细内容规则配置，值为数组</span><br><span class="line">* name : 爬取的名称，对应实体中的属性名。必输字段</span><br><span class="line">* reg：匹配正则表达式，可为空。</span><br><span class="line">* value：爬取规则xpath, 可在网站开发者工具中选择你需要爬取的内容，右键－复制xpath,这样可复制获取某一元素的xpath，方便快捷，准确率高。</span><br><span class="line">* simpleDateFormat：目前只用于时间格式化。</span><br><span class="line"></span><br><span class="line">##### (5).**wechat规则配置（微信仅公众号爬取有用）**</span><br><span class="line">* name： 微信名</span><br><span class="line">* uid： 微公众号id</span><br><span class="line">* url ： url 地址用法见微信爬取不同点</span><br><span class="line"></span><br><span class="line">##### (6).**rinseRules 清洗配置**</span><br><span class="line">此清洗配置可以解决我们在爬取网站文章时纠结与文章排版与你需要的不一致问题。</span><br><span class="line"></span><br><span class="line">* 清洗配置：</span><br><span class="line"></span><br><span class="line">![清洗配置](http://ot2ajy8ew.bkt.clouddn.com/rule_clean.png)</span><br><span class="line"></span><br><span class="line">*（上图包含了我们清洗页面中的常用配置。如：增加(add)、替换局部(replace)、替换全部(fullreplace)、删除(delete)，还有一个复制操作（copy），目前主要复制属性值）。*</span><br><span class="line"></span><br><span class="line">* **清洗参数说明：**</span><br><span class="line">* action：操作动作说明</span><br><span class="line">值为：add(添加)、replace(替换局部)、fullreplace(全部  替换)、delete(删除)、</span><br><span class="line">copy(复制)。</span><br><span class="line"></span><br><span class="line">* type：操作类型。</span><br><span class="line">值为：attr(属性)、text（文本）、node（元素）</span><br><span class="line"></span><br><span class="line">* cssquery：css选择器   </span><br><span class="line">选择器详细规则请见：https://jsoup.org/cookbook/extracting-data/selector-syntax</span><br><span class="line"></span><br><span class="line">* name：属性名，只适于对元素属性操作中使用。</span><br><span class="line"></span><br><span class="line">* source：替换的源数据，所有类型替换都支持正则表达式。</span><br><span class="line"></span><br><span class="line">* target：替换后的目标数据。</span><br><span class="line"></span><br><span class="line">* value：值（添加 到attr／text／node 中的值）。</span><br><span class="line"></span><br><span class="line">* **添加（add）操作**</span><br><span class="line"></span><br><span class="line">* 支持类型： attr(属性)、text（文本）、node（元素）、 style(内联样式)</span><br><span class="line">* **添加属性（attr）**：需要参数：action、type 、cssquery、name（属性名）value（属性值）  </span><br><span class="line">* 应用场景：例我们要在所有的图片标签上加上alt提示属性。</span><br><span class="line">* 事例：</span><br><span class="line">`&#123;`</span><br><span class="line">`&quot;action&quot;: &quot; add &quot;,`</span><br><span class="line">` &quot; type &quot;:&quot; attr &quot;,`</span><br><span class="line">`&quot; cssquery &quot;: &quot;img&quot;,`</span><br><span class="line">`&quot; name&quot;: &quot;alt&quot;,`</span><br><span class="line">`&quot; value &quot;:&quot;精益阅读&quot;`</span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">* **添加文本（text）**：需要参数：action、type 、cssquery、value （值）  </span><br><span class="line">* 应用场景：例如我们要在所有的文章最后加上上加上一句话。版权归奇伢科技所有。</span><br><span class="line"></span><br><span class="line">* **添加节点（node）**：需要参数：action、type 、cssquery、value （值格式为html） </span><br><span class="line">* 应用场景：例如我们要在所有的文章最后加上上加上一句话。版权归奇伢科技所有。</span><br><span class="line">* 事例：</span><br><span class="line">`&#123;`</span><br><span class="line">`  &quot;action&quot;: &quot; add &quot;,`</span><br><span class="line">` &quot; type &quot;:&quot; node &quot;,`</span><br><span class="line">` &quot; cssquery &quot;: &quot;body&quot;,`</span><br><span class="line">` &quot;value &quot;:&quot;&lt;p&gt;版权归奇伢科技所有&lt;/p&gt;&quot;   `</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* **添加内联系样式（style）**：需要参数：action、type 、cssquery、vluae （样式属性值） ，name（样式属性名） </span><br><span class="line">* 事例：</span><br><span class="line">`&#123;`</span><br><span class="line">`  &quot;action&quot;: &quot;add&quot;,`</span><br><span class="line">` &quot;type&quot;:&quot;style&quot;,`</span><br><span class="line">` &quot;cssquery&quot;: &quot;p&quot;,`</span><br><span class="line">` &quot;name&quot;: &quot;font-size&quot;,`</span><br><span class="line">`&quot;value&quot;: &quot; 19px&quot;`</span><br><span class="line">`  &#125;`</span><br><span class="line"></span><br><span class="line">* **替换局部（replace）：**</span><br><span class="line">* 支持类型： attr(属性)、text（文本）、node（元素）</span><br><span class="line"></span><br><span class="line">* 替换属性 （attr）：需要参数：action、type 、cssquery、name（属性名）、source（源数据）、 target（目标数据数据）  </span><br><span class="line"></span><br><span class="line">* 应用场景：如微信的图片都有防盗链处理，我们要将微信的图片地址前加上改为我们地址进行处理。</span><br><span class="line"></span><br><span class="line">* 事例：</span><br><span class="line">`&#123;`</span><br><span class="line">` &quot;action&quot;: &quot;replace&quot;,`</span><br><span class="line">` &quot;type&quot;:&quot;attr&quot;,`</span><br><span class="line">` &quot;cssquery&quot;: &quot;img[src]&quot;,`</span><br><span class="line">`&quot;name&quot;: &quot;style&quot;,`</span><br><span class="line">` &quot;source&quot;: &quot;http://mmbiz.qpic.cn/mmbiz&quot;,`</span><br><span class="line">`&quot;target&quot;: &quot;http://daydayupapi.qiyadeng.com/getWeChatImage?redir_url=http://mmbiz.qpic.cn/mmbiz&quot;`</span><br><span class="line">` &#125;`</span><br><span class="line"></span><br><span class="line">* 替换样式属性（style）：需要参数：action、type 、cssquery、，name（样式属性名） ，source（源样式属性值数据）、 target（目标样式属性值数据）</span><br><span class="line"></span><br><span class="line">* **替换全部（fullrepalce）：**</span><br><span class="line"></span><br><span class="line">* 替换节点是将整个节点变成字符后进行替换的.</span><br><span class="line">* 替换全部无类型，需要参数：action、source（源数据）、 target（目标数据数据</span><br><span class="line">* 事例(将所有“程序员”修改为“程序猿)：</span><br><span class="line">`&#123;`</span><br><span class="line">` &quot;action&quot;: &quot; fullreplace&quot;,`</span><br><span class="line">`&quot;source&quot;:&quot;程序员&quot;,`</span><br><span class="line">` &quot;target&quot;: &quot;程序猿&quot;`</span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">* **删除 （delete）：**</span><br><span class="line">* 支持类型： attr(属性)、text（文本）、node（元素）、内联样式（style）</span><br><span class="line">* 删除属性（attr）需要参数：action、type 、cssquery、name（属性名）</span><br><span class="line">* 事例：（删除图片标签上的样式style属性）</span><br><span class="line">`&#123;`</span><br><span class="line">` &quot;action&quot;: &quot;delete&quot;,`</span><br><span class="line">`&quot;type&quot;:&quot; attr &quot;,`</span><br><span class="line">`  &quot;cssquery&quot;: &quot;img&quot;,`</span><br><span class="line">`&quot;name&quot;: &quot;style&quot;,`</span><br><span class="line">` &#125;`</span><br><span class="line"></span><br><span class="line">* 删除文本（text）：需要参数：action、type 、cssquery</span><br><span class="line">* 删除样式属性（style）：需要参数：action、type 、cssquery、，name（样式属性名，支持单个或多个属性名，多个用 “:” 分隔。</span><br><span class="line"></span><br><span class="line">* **复制（copy）**</span><br><span class="line">* 支持类型： attr(属性)</span><br><span class="line">* 复制属性（attr） ：需要参数：action、type 、cssquery、source（源属性名） 、target（目标属性名）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### **微信爬取**</span><br><span class="line"></span><br><span class="line">微信爬取的基本规则于普通网址一样，不过在微信中爬取文章会经常出现验证码。对此我们的做法是用动态代理爬取文章，这样就不会出现验证码了。完全可以解决大部分人对于验证码的困扰哦～</span><br><span class="line"></span><br><span class="line">#### **动态代理**</span><br><span class="line"></span><br><span class="line">动态代理可以解决爬取过程中出现验证码的问题，下面是在本项目中使用动态代理的方法（大家刚开始测试运行阶段也可以不使用哦～）：</span><br><span class="line"></span><br><span class="line">* 1.注册一个“无忧代理“账号，这里使用代理服务是收费的哦～</span><br><span class="line"></span><br><span class="line">* 2.注册账号后需要创建一个订单，然后保存订单号。</span><br><span class="line"></span><br><span class="line">* 3.在项目的配置文件[application-dev.properties](https://github.com/qiyaTech/javaCrawling/blob/dev_github_20170807_deng/boss/src/main/resources/application-dev.properties)中添加配置：</span><br><span class="line">  ```poxy.data5u.order = 无忧代理订单号</span><br></pre></td></tr></table></figure><ul><li>4.在上述爬取规则配置site  站点配置中，将 dynamicProxy 属性设置为 true 开启动态代理哦，dynamicProxy 属性默认为false，不开启。</li></ul><p>完成上面步骤在爬取微信公众号时就可以使用动态代理了，免去验证码之苦～～哈哈</p><h4 id="历史爬取"><a href="#历史爬取" class="headerlink" title="历史爬取"></a><strong>历史爬取</strong></h4><p><strong>历史爬取配置步骤如下：</strong></p><ul><li>1.电脑设置开启代代理手机设置代理为电脑的ip</li><li>2.微信关注要爬取的公众号</li><li>3.选择公众号点击查看历史 ，进入工作号文章列表 开始向上滑我们在代理软件找到如下地址：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/wechat.png" alt=""></p><p><code>https://mp.weixin.qq.com/mp/profile_ext?action=getmsg&amp;__biz=MjM5MTcyMzEyMA==&amp;f=json&amp;frommsgid=1000000027&amp;count=10&amp;scene=124&amp;is_ok=1&amp;uin=777&amp;key=777&amp;pass_ticket=RLFa08mwKkLcExQhkugeJbL5fWrSbxHkAsITPcEc0BTVHSc6tqW9bJt71z9pWIWw&amp;wxtoken=&amp;x5=1&amp;f=json</code></p><ul><li><p>4.将以上地址中的 frommsgid 的值  如: 1000000027  删除后再设置为 json配置中 spider ——&gt; startUrl 的值</p></li><li><p>5.将以上地址中的frommsgid 的值  如1000000027  改成 [MESSAGEID]  删除后设置为  json配置 wechat-&gt;url参数的值。如下图:</p></li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/we_pei.png" alt="设置url"></p><ul><li>6.将第三点图中 红色部分 Cookie 参数和值，设置到 json 配置 headers 参数数组中如下：</li></ul><p><img src="http://ot2ajy8ew.bkt.clouddn.com/cookie.png" alt="设置cookie"></p><ul><li>7.剩下就是文章字段规则和清洗规则的配置了，可参考前文中的详解哦。</li></ul><h4 id="更新爬取"><a href="#更新爬取" class="headerlink" title="更新爬取"></a><strong>更新爬取</strong></h4><p><strong>下面是微信公众号更新爬取的步骤：</strong></p><ul><li>1.找到公众号的微信号 </li><li><p>2.将以下链接中 “woshipm” 修改为你要爬取的公众号的微信号<br><code>http://weixin.sogou.com/weixin?type=1&amp;s_from=input&amp;query=woshipm&amp;ie=utf8&amp;_sug_=n&amp;_sug_type_=</code></p></li><li><p>3.将修改好的地址配置为 spider ——&gt; startUrl 和 wechat——&gt;url 参数的值。uuid 必须设置微信号如图:<br><img src="http://ot2ajy8ew.bkt.clouddn.com/weichat_geng.png" alt=""></p></li><li><p>4.剩下就是文章字段规则和清洗规则的配置了，可参考前文中的详解哦。</p></li></ul><p><strong>（到这里我们整个配置就已经完成了，大家可以爬取文章了～）</strong></p><h2 id="五-爬取效果展现"><a href="#五-爬取效果展现" class="headerlink" title="五.爬取效果展现"></a>五.<strong>爬取效果展现</strong></h2><hr><p>下面给大家展示下我们用<strong>奇伢爬虫</strong>爬取文章后在我们 <strong>精益阅读APP</strong> 以及  <strong>精益阅读小程序</strong> 上的展现：</p><p>大家可以扫描下方二维码进入小程序哦。进入小程序后可以 <strong>点击右上角——&gt;关于精益阅读——&gt;相关公众号</strong>  进入我们公众号，有什么问题也可以在公众号中联系客服哦～<br><img src="http://ot2ajy8ew.bkt.clouddn.com/gh_7edeabb4068b_258.jpg" alt="精益阅读小程序"></p><p><img src="http://ot2ajy8ew.bkt.clouddn.com/jingyi5.jpg" alt="精益阅读界面展现"></p><p><img src="http://ot2ajy8ew.bkt.clouddn.com/jingyi4.jpg" alt="精益阅读界面展现"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;em&gt;*奇伢爬虫使用介绍&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
      <category term="爬虫" scheme="http://yoursite.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="部署" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
</feed>
